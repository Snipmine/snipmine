[
[
  522917,
  "`k1Creator0`.commit();\nDiskLruCache.Editor `k2Creator0` = `cache`.edit(\"k2\");\n`k2Creator0`.set(1, \"G\");\n`cache`.close();\n",
  0,
  [
    "sm:import:java.io.StringWriter,1",
    "sm:import:com.jakewharton.disklrucache.DiskLruCache.JOURNAL_FILE,1",
    "sm:import:java.io.FileWriter,1",
    "sm:import:org.junit.Rule,1",
    "sm:import:java.io.Reader,1",
    "sm:input:`cache`=com.jakewharton.disklrucache.DiskLruCache",
    "sm:import:org.junit.rules.TemporaryFolder,1",
    "sm:output:`k2Creator0`=com.jakewharton.disklrucache.DiskLruCache.Editor",
    "sm:import:java.io.FileReader,1",
    "sm:import:org.junit.Before,1",
    "sm:import:java.io.File,1",
    "sm:hc:77fd754",
    "sm:import:com.jakewharton.disklrucache.DiskLruCache.VERSION_1,1",
    "sm:import:java.io.BufferedReader,1",
    "sm:depth:6",
    "sm:import:org.junit.After,1",
    "sm:import:org.fest.assertions.api.Assertions.assertThat,1",
    "sm:order:24",
    "sm:import:org.junit.Test,1",
    "sm:import:java.util.List,1",
    "sm:src:/home/alex/bachelor/eval2/repos/JakeWharton/DiskLruCache/src/test/java/com/jakewharton/disklrucache/DiskLruCacheTest.java",
    "sm:import:com.jakewharton.disklrucache.DiskLruCache.MAGIC,1",
    "sm:import:java.io.Writer,1",
    "sm:input:`k1Creator0`=com.jakewharton.disklrucache.DiskLruCache.Editor",
    "sm:import:org.apache.commons.io.FileUtils,1",
    "sm:import:org.junit.Assert.fail,1",
    "sm:import:java.io.InputStream,1",
    "sm:import:java.util.ArrayList,1",
    "sm:import:com.jakewharton.disklrucache.DiskLruCache.JOURNAL_FILE_BACKUP,1",
    "sm:import:java.util.Arrays,1"
  ]
],[
  643514,
  "if (!`config`.getApplicationSettings().getPubsubhubbub()) `Placeholder`\ntry {\n    if (StringUtils.isBlank(`topic0`)) `Placeholder`\n    log.debug(\"content callback received for {}\", `topic0`);\n    for(Feed `feed0` : `feeds0`) `Placeholder`\n}catch (Exception `e0`) {\n    log.error(\"Could not parse pubsub callback: \" + `e0`.getMessage());\n}\n",
  0,
  [
    "sm:input:`feeds0`=java.util.List<com.commafeed.backend.model.Feed>",
    "sm:import:javax.ws.rs.core.Response.Status,1",
    "sm:import:org.apache.commons.lang3.StringUtils,1",
    "sm:import:javax.inject.Inject,1",
    "sm:import:javax.ws.rs.Produces,1",
    "sm:import:javax.ws.rs.core.Response,1",
    "sm:import:com.google.common.base.Preconditions,1",
    "sm:import:org.apache.commons.lang3.ArrayUtils,1",
    "sm:order:47",
    "sm:import:com.commafeed.backend.dao.FeedDAO,1",
    "sm:import:com.commafeed.backend.feed.FeedQueues,1",
    "sm:import:javax.ws.rs.Path,1",
    "sm:import:com.commafeed.backend.feed.FetchedFeed,1",
    "sm:import:com.codahale.metrics.MetricRegistry,1",
    "sm:import:javax.ws.rs.Consumes,1",
    "sm:import:javax.ws.rs.QueryParam,1",
    "sm:import:javax.ws.rs.POST,1",
    "sm:hc:da5b469b",
    "sm:depth:10",
    "sm:import:javax.ws.rs.core.MediaType,1",
    "sm:import:org.apache.commons.io.IOUtils,1",
    "sm:import:com.commafeed.backend.model.Feed,1",
    "sm:input:`topic0`=java.lang.String",
    "sm:import:java.util.List,1",
    "sm:import:com.codahale.metrics.annotation.Timed,1",
    "sm:import:javax.ws.rs.core.Context,1",
    "sm:import:lombok.extern.slf4j.Slf4j,1",
    "sm:input:`config`=com.commafeed.CommaFeedConfiguration",
    "sm:import:javax.servlet.http.HttpServletRequest,1",
    "sm:import:com.commafeed.CommaFeedConfiguration,1",
    "sm:import:javax.ws.rs.GET,1",
    "sm:import:lombok.RequiredArgsConstructor,1",
    "sm:src:/home/alex/bachelor/eval2/repos/Athou/commafeed/src/main/java/com/commafeed/frontend/resource/PubSubHubbubCallbackREST.java",
    "sm:import:java.util.Date,1",
    "sm:import:javax.inject.Singleton,1",
    "sm:import:io.dropwizard.hibernate.UnitOfWork,1",
    "sm:import:com.commafeed.backend.feed.FeedParser,1"
  ]
],[
  436229,
  "boolean `isUpdated0` = `updateJobState`();\nif (`isUpdated0` && !`reporter0`.getCompletedJobIds().contains(`jobIDStr0`)) {\n    if (`jobProgress`.isComplete()) {\n        if (`reducers0` == 0) `Placeholder`\n        `job0`.setConfiguration(((HiveConf) `conf0`).getAllProperties());\n        `reporter0`.addCompletedJobIds(`jobIDStr0`);\n    } else `Placeholder`\n    `reporter0`.addJobIdToProgress(`jobIDStr0`, `getJobProgress`());\n    `pushWorkflowProgress`(`queryId0`, `reporter0`);\n}\n",
  0,
  [
    "sm:import:java.io.IOException,1",
    "sm:import:org.apache.commons.logging.LogFactory,1",
    "sm:order:59",
    "sm:import:com.google.common.collect.Maps,1",
    "sm:import:com.twitter.ambrose.model.Event.WorkflowProgressField,1",
    "sm:import:com.twitter.ambrose.hive.reporter.AmbroseHiveReporterFactory.getEmbeddedProgressReporter,1",
    "sm:import:org.apache.hadoop.hive.ql.session.SessionState,1",
    "sm:input:`job0`=com.twitter.ambrose.hive.HiveJob",
    "sm:import:com.twitter.ambrose.model.hadoop.MapReduceJobState,1",
    "sm:input:`queryId0`=java.lang.String",
    "sm:import:org.apache.hadoop.mapred.JobClient,1",
    "sm:import:org.apache.hadoop.conf.Configuration,1",
    "sm:import:com.twitter.ambrose.hive.reporter.EmbeddedAmbroseHiveProgressReporter,1",
    "sm:import:java.util.Map,1",
    "sm:import:org.apache.commons.logging.Log,1",
    "sm:input:`reporter0`=com.twitter.ambrose.hive.reporter.EmbeddedAmbroseHiveProgressReporter",
    "sm:import:org.apache.hadoop.mapred.RunningJob,1",
    "sm:input:`updateJobState`=boolean()",
    "sm:input:`jobIDStr0`=java.lang.String",
    "sm:input:`reducers0`=int",
    "sm:import:org.apache.hadoop.hive.conf.HiveConf,1",
    "sm:input:`pushWorkflowProgress`=void(java.lang.String,com.twitter.ambrose.hive.reporter.EmbeddedAmbroseHiveProgressReporter)",
    "sm:output:`isUpdated0`=boolean",
    "sm:input:`conf0`=org.apache.hadoop.conf.Configuration",
    "sm:import:org.apache.hadoop.mapred.JobID,1",
    "sm:import:com.twitter.ambrose.model.Job,1",
    "sm:import:org.apache.hadoop.mapred.JobConf,1",
    "sm:input:`jobProgress`=com.twitter.ambrose.model.hadoop.MapReduceJobState",
    "sm:hc:7a03dbc",
    "sm:import:com.twitter.ambrose.model.DAGNode,1",
    "sm:import:org.apache.hadoop.hive.ql.stats.ClientStatsPublisher,1",
    "sm:src:/home/alex/bachelor/eval2/repos/twitter/ambrose/hive/src/main/java/com/twitter/ambrose/hive/AmbroseHiveStatPublisher.java",
    "sm:depth:13",
    "sm:input:`getJobProgress`=int()",
    "sm:import:com.twitter.ambrose.model.Event,1"
  ]
],[
  276639,
  "if (CollectionUtils.isNotEmpty(`children0`)) {\n    if (`name0` == null) `Placeholder`\n    if (`category0` == null) {\n        `category0`.setName(`name0`);\n        `category0`.setParent(`parent0`);\n        `category0`.setUser(`user0`);\n    }\n} else `Placeholder`",
  0,
  [
    "sm:hc:945c8cd1",
    "sm:src:/home/alex/bachelor/eval2/repos/Athou/commafeed/src/main/java/com/commafeed/backend/opml/OPMLImporter.java",
    "sm:input:`children0`=java.util.List<com.rometools.opml.feed.opml.Outline>",
    "sm:input:`user0`=com.commafeed.backend.model.User",
    "sm:import:org.apache.commons.lang3.StringUtils,1",
    "sm:input:`name0`=java.lang.String",
    "sm:import:java.io.StringReader,1",
    "sm:import:com.commafeed.backend.model.User,1",
    "sm:import:org.apache.commons.collections4.CollectionUtils,1",
    "sm:import:com.rometools.opml.feed.opml.Outline,1",
    "sm:import:javax.inject.Inject,1",
    "sm:import:com.commafeed.backend.service.FeedSubscriptionService.FeedSubscriptionException,1",
    "sm:import:com.commafeed.backend.model.FeedCategory,1",
    "sm:order:34",
    "sm:depth:9",
    "sm:input:`category0`=com.commafeed.backend.model.FeedCategory",
    "sm:import:com.commafeed.backend.dao.FeedCategoryDAO,1",
    "sm:import:com.rometools.opml.feed.opml.Opml,1",
    "sm:import:java.util.List,1",
    "sm:import:com.commafeed.backend.feed.FeedUtils,1",
    "sm:import:com.rometools.rome.io.WireFeedInput,1",
    "sm:import:lombok.extern.slf4j.Slf4j,1",
    "sm:import:com.commafeed.backend.cache.CacheService,1",
    "sm:input:`parent0`=com.commafeed.backend.model.FeedCategory",
    "sm:import:lombok.RequiredArgsConstructor,1",
    "sm:import:javax.inject.Singleton,1",
    "sm:import:com.commafeed.backend.service.FeedSubscriptionService,1"
  ]
],[
  581900,
  "String `xml0` = IOUtils.toString(`getClass`().getResourceAsStream(`fileName0`));\nMockito.verify(`feedSubscriptionService0`).subscribe(Mockito.eq(`user0`), Mockito.anyString(), Mockito.anyString(), Mockito.any(FeedCategory.class), Mockito.anyInt());\n",
  0,
  [
    "sm:import:java.io.IOException,1",
    "sm:import:com.commafeed.backend.model.FeedCategory,1",
    "sm:depth:8",
    "sm:input:`user0`=com.commafeed.backend.model.User",
    "sm:import:com.commafeed.backend.cache.CacheService,1",
    "sm:import:org.mockito.Mockito,1",
    "sm:output:`xml0`=java.lang.String",
    "sm:import:com.commafeed.backend.model.User,1",
    "sm:import:com.commafeed.backend.dao.FeedCategoryDAO,1",
    "sm:input:`getClass`=java.lang.Class()",
    "sm:import:org.apache.commons.io.IOUtils,1",
    "sm:input:`feedSubscriptionService0`=com.commafeed.backend.service.FeedSubscriptionService",
    "sm:hc:318affce",
    "sm:import:org.junit.Test,1",
    "sm:src:/home/alex/bachelor/eval2/repos/Athou/commafeed/src/test/java/com/commafeed/backend/opml/OPMLImporterTest.java",
    "sm:order:38",
    "sm:import:com.commafeed.backend.service.FeedSubscriptionService,1",
    "sm:input:`fileName0`=java.lang.String"
  ]
],[
  564242,
  "String `contentHash0` = DigestUtils.sha1Hex(StringUtils.trimToEmpty(`content0`.getContent()));\nFeedEntryContent `result0` = null;\nif (`existingId0` == null) {\n    `content0`.setContentHash(`contentHash0`);\n    `content0`.setTitle(FeedUtils.truncate(FeedUtils.handleContent(`content0`.getTitle(), `baseUrl0`, true), 2048));\n} else `Placeholder`\n",
  0,
  [
    "sm:hc:fe2a3396",
    "sm:import:com.commafeed.backend.feed.FeedUtils,1",
    "sm:output:`contentHash0`=java.lang.String",
    "sm:import:org.apache.commons.codec.digest.DigestUtils,1",
    "sm:import:org.apache.commons.lang3.StringUtils,1",
    "sm:input:`content0`=com.commafeed.backend.model.FeedEntryContent",
    "sm:depth:10",
    "sm:input:`existingId0`=java.lang.Long",
    "sm:import:com.commafeed.backend.model.FeedEntryContent,1",
    "sm:import:lombok.RequiredArgsConstructor,1",
    "sm:import:javax.inject.Inject,1",
    "sm:output:`result0`=com.commafeed.backend.model.FeedEntryContent",
    "sm:order:49",
    "sm:import:com.commafeed.backend.dao.FeedEntryContentDAO,1",
    "sm:import:javax.inject.Singleton,1",
    "sm:src:/home/alex/bachelor/eval2/repos/Athou/commafeed/src/main/java/com/commafeed/backend/service/FeedEntryContentService.java",
    "sm:input:`baseUrl0`=java.lang.String"
  ]
],[
  210091,
  "String `queryId0` = AmbroseHiveUtil.getHiveQueryId(`conf0`);\nif (`workflowVersion0` == null) `Placeholder` else {\n    Workflow `workflow0` = new Workflow(`queryId0`, `workflowVersion0`, `reporter0`.getJobs());\n    `outputStatsData`(`workflow0`);\n    `reporter0`.flushJsonToDisk();\n}\nif (!`isLastCommandProcessed`(`hookContext0`)) `Placeholder`\n",
  0,
  [
    "sm:import:org.apache.hadoop.hive.cli.CliSessionState,1",
    "sm:import:org.apache.hadoop.hive.ql.HiveDriverRunHookContext,1",
    "sm:import:java.io.IOException,1",
    "sm:import:org.apache.commons.logging.LogFactory,1",
    "sm:input:`isLastCommandProcessed`=boolean(org.apache.hadoop.hive.ql.HiveDriverRunHookContext)",
    "sm:import:com.twitter.ambrose.hive.reporter.AmbroseHiveReporterFactory.getEmbeddedProgressReporter,1",
    "sm:import:org.apache.hadoop.hive.ql.session.SessionState,1",
    "sm:import:java.util.Scanner,1",
    "sm:import:org.apache.hadoop.conf.Configuration,1",
    "sm:input:`hookContext0`=org.apache.hadoop.hive.ql.HiveDriverRunHookContext",
    "sm:import:java.util.Map,1",
    "sm:import:com.twitter.ambrose.hive.reporter.EmbeddedAmbroseHiveProgressReporter,1",
    "sm:import:org.apache.commons.logging.Log,1",
    "sm:input:`workflowVersion0`=java.lang.String",
    "sm:input:`reporter0`=com.twitter.ambrose.hive.reporter.EmbeddedAmbroseHiveProgressReporter",
    "sm:output:`queryId0`=java.lang.String",
    "sm:import:org.apache.hadoop.hive.ql.HiveDriverRunHook,1",
    "sm:import:java.io.File,1",
    "sm:order:43",
    "sm:input:`outputStatsData`=void(com.twitter.ambrose.model.Workflow)",
    "sm:depth:10",
    "sm:input:`conf0`=org.apache.hadoop.conf.Configuration",
    "sm:import:org.apache.commons.lang.StringUtils,1",
    "sm:import:java.io.FileNotFoundException,1",
    "sm:import:com.twitter.ambrose.model.Workflow,1",
    "sm:import:org.apache.hadoop.hive.ql.MapRedStats,1",
    "sm:import:java.util.List,1",
    "sm:import:java.util.regex.Pattern,1",
    "sm:hc:33d22146",
    "sm:src:/home/alex/bachelor/eval2/repos/twitter/ambrose/hive/src/main/java/com/twitter/ambrose/hive/AmbroseHiveFinishHook.java"
  ]
],[
  333296,
  "boolean `ok0` = false;\nNamespace `defaultNS0` = `rssRoot0`.getNamespace();\nList<Namespace> `additionalNSs0` = Lists.newArrayList(`rssRoot0`.getAdditionalNamespaces());\nif (CollectionUtils.isNotEmpty(`children0`)) `Placeholder`\n",
  0,
  [
    "sm:import:java.util.List,1",
    "sm:output:`defaultNS0`=org.jdom2.Namespace",
    "sm:output:`ok0`=boolean",
    "sm:input:`rssRoot0`=org.jdom2.Element",
    "sm:order:32",
    "sm:src:/home/alex/bachelor/eval2/repos/Athou/commafeed/src/main/java/com/commafeed/backend/rome/RSSRDF10Parser.java",
    "sm:import:org.apache.commons.collections4.CollectionUtils,1",
    "sm:import:com.google.common.collect.Lists,1",
    "sm:output:`additionalNSs0`=java.util.List<org.jdom2.Namespace>",
    "sm:depth:7",
    "sm:hc:9fb2bc5c",
    "sm:import:org.jdom2.Namespace,1",
    "sm:import:com.rometools.rome.io.impl.RSS10Parser,1",
    "sm:import:org.jdom2.Element,1",
    "sm:input:`children0`=java.util.List<org.jdom2.Element>",
    "sm:import:org.jdom2.Document,1"
  ]
],[
  146552,
  "if (`feed0` == null) {\n    `feed0`.setUrl(`url0`);\n    `feed0`.setNormalizedUrlHash(DigestUtils.sha1Hex(`normalized0`));\n    `feed0`.setDisabledUntil(new Date(0));\n}",
  0,
  [
    "sm:import:com.commafeed.backend.feed.FeedUtils,1",
    "sm:import:java.io.IOException,1",
    "sm:import:com.commafeed.backend.favicon.AbstractFaviconFetcher.Favicon,1",
    "sm:import:org.apache.commons.codec.digest.DigestUtils,1",
    "sm:import:java.util.Set,1",
    "sm:src:/home/alex/bachelor/eval2/repos/Athou/commafeed/src/main/java/com/commafeed/backend/service/FeedService.java",
    "sm:input:`normalized0`=java.lang.String",
    "sm:import:com.commafeed.backend.dao.FeedDAO,1",
    "sm:import:com.commafeed.backend.model.Feed,1",
    "sm:import:java.util.Date,1",
    "sm:order:26",
    "sm:depth:7",
    "sm:input:`url0`=java.lang.String",
    "sm:import:org.apache.commons.io.IOUtils,1",
    "sm:import:javax.inject.Inject,1",
    "sm:import:com.commafeed.backend.favicon.AbstractFaviconFetcher,1",
    "sm:import:javax.inject.Singleton,1",
    "sm:input:`feed0`=com.commafeed.backend.model.Feed",
    "sm:hc:bd7e536"
  ]
],[
  335663,
  "Validate.notEmpty(`path0`, \"Cannot create section at empty path\");\nConfiguration `root0` = `getRoot`();\n",
  0,
  [
    "sm:import:java.util.List,1",
    "sm:import:java.util.LinkedHashMap,1",
    "sm:import:org.apache.commons.lang.Validate,1",
    "sm:depth:6",
    "sm:import:java.util.Set,1",
    "sm:src:/home/alex/bachelor/eval2/repos/Bukkit/Bukkit/src/main/java/org/bukkit/configuration/MemorySection.java",
    "sm:import:org.bukkit.OfflinePlayer,1",
    "sm:import:org.bukkit.Color,1",
    "sm:output:`root0`=org.bukkit.configuration.Configuration",
    "sm:import:java.util.LinkedHashSet,1",
    "sm:input:`path0`=java.lang.String",
    "sm:import:org.bukkit.util.Vector,1",
    "sm:input:`getRoot`=org.bukkit.configuration.Configuration()",
    "sm:import:java.util.ArrayList,1",
    "sm:order:14",
    "sm:hc:caafc2e4",
    "sm:import:org.bukkit.inventory.ItemStack,1",
    "sm:import:org.bukkit.util.NumberConversions,1",
    "sm:import:java.util.Map,1"
  ]
],[
  385233,
  "if (`nodeIdToDAGNode0` == null) `Placeholder`\nint `skipped0` = 0;\nfor(DAGNode<Job> `dagNode0` : `nodeIdToDAGNode0`.values()) {\n    `reporter0`.pushEvent(`queryId0`, new Event.JobFinishedEvent(`dagNode0`));\n    `skipped0`++;\n}\n",
  0,
  [
    "sm:import:org.apache.hadoop.hive.ql.hooks.ExecuteWithHookContext,1",
    "sm:import:java.util.HashMap,1",
    "sm:import:org.apache.commons.logging.LogFactory,1",
    "sm:import:com.google.common.collect.Maps,1",
    "sm:import:com.twitter.ambrose.model.Event.WorkflowProgressField,1",
    "sm:import:com.twitter.ambrose.hive.reporter.AmbroseHiveReporterFactory.getEmbeddedProgressReporter,1",
    "sm:hc:60e4de7c",
    "sm:input:`queryId0`=java.lang.String",
    "sm:import:org.apache.hadoop.conf.Configuration,1",
    "sm:import:com.twitter.ambrose.hive.reporter.EmbeddedAmbroseHiveProgressReporter,1",
    "sm:import:java.util.Map,1",
    "sm:depth:8",
    "sm:input:`nodeIdToDAGNode0`=java.util.Map<java.lang.String,com.twitter.ambrose.model.DAGNode<com.twitter.ambrose.model.Job>>",
    "sm:import:org.apache.commons.logging.Log,1",
    "sm:input:`reporter0`=com.twitter.ambrose.hive.reporter.EmbeddedAmbroseHiveProgressReporter",
    "sm:output:`skipped0`=int",
    "sm:order:33",
    "sm:src:/home/alex/bachelor/eval2/repos/twitter/ambrose/hive/src/main/java/com/twitter/ambrose/hive/AmbroseHivePreHook.java",
    "sm:import:com.twitter.ambrose.model.Job,1",
    "sm:import:com.twitter.ambrose.model.DAGNode,1",
    "sm:import:org.apache.hadoop.hive.ql.hooks.HookContext,1",
    "sm:import:com.twitter.ambrose.model.Event,1"
  ]
],[
  636496,
  "Validate.notNull(`message0`, \"Message cannot be null\");\nint `i0` = `message0`.lastIndexOf(' ');\nif (`i0` < 0) `Placeholder`\n`this.completions` = `completions0`;\n",
  0,
  [
    "sm:input:`this.completions`=java.util.Collection<java.lang.String>",
    "sm:import:org.apache.commons.lang.Validate,1",
    "sm:depth:6",
    "sm:input:`message0`=java.lang.String",
    "sm:output:`i0`=int",
    "sm:hc:12c42b6",
    "sm:src:/home/alex/bachelor/eval2/repos/Bukkit/Bukkit/src/main/java/org/bukkit/event/player/PlayerChatTabCompleteEvent.java",
    "sm:order:25",
    "sm:import:org.bukkit.entity.Player,1",
    "sm:import:java.util.Collection,1",
    "sm:import:org.bukkit.event.HandlerList,1",
    "sm:input:`completions0`=java.util.Collection<java.lang.String>"
  ]
],[
  9800,
  "for(String `alias0` : `values0`.keySet()) {\n    StringBuilder `bad0` = new StringBuilder();\n    for(String `commandString0` : `commandStrings0`) {\n        Command `command0` = `getCommand`(`commandArgs0`[0]);\n        if (`command0` == null) `Placeholder` else `Placeholder`\n    }\n}",
  0,
  [
    "sm:import:java.util.HashMap,1",
    "sm:import:org.apache.commons.lang.Validate,1",
    "sm:import:org.bukkit.util.Java15Compat.Arrays_copyOfRange,1",
    "sm:import:java.util.Collection,1",
    "sm:import:org.bukkit.command.defaults,1",
    "sm:input:`commandStrings0`=java.lang.String[]",
    "sm:import:java.util.Iterator,1",
    "sm:import:java.util.Map,1",
    "sm:import:java.util.Collections,1",
    "sm:import:org.bukkit.entity.Player,1",
    "sm:input:`commandArgs0`=java.lang.String[]",
    "sm:input:`getCommand`=org.bukkit.command.Command(java.lang.String)",
    "sm:hc:c95b6cfc",
    "sm:depth:12",
    "sm:order:41",
    "sm:import:org.bukkit.Server,1",
    "sm:import:java.util.List,1",
    "sm:import:java.util.regex.Pattern,1",
    "sm:import:org.bukkit.util.StringUtil,1",
    "sm:src:/home/alex/bachelor/eval2/repos/Bukkit/Bukkit/src/main/java/org/bukkit/command/SimpleCommandMap.java",
    "sm:import:java.util.ArrayList,1",
    "sm:input:`values0`=java.util.Map<java.lang.String,java.lang.String[]>"
  ]
],[
  330518,
  "Preconditions.checkArgument(`maxEvents0` > 0);\nWorkflowId `id0` = WorkflowId.parseString(`workflowId0`);\nList<Event> `workflowEvents0` = Lists.newArrayListWithCapacity(`maxEvents0`);\n",
  0,
  [
    "sm:import:java.io.IOException,1",
    "sm:import:org.apache.commons.logging.LogFactory,1",
    "sm:import:com.twitter.ambrose.service.StatsReadService,1",
    "sm:import:org.apache.hadoop.conf.Configuration,1",
    "sm:import:java.util.Map,1",
    "sm:import:com.google.common.base.Preconditions,1",
    "sm:import:com.fasterxml.jackson.core.type.TypeReference,1",
    "sm:import:org.apache.hadoop.hbase.HBaseConfiguration,1",
    "sm:input:`workflowId0`=java.lang.String",
    "sm:import:org.apache.commons.logging.Log,1",
    "sm:import:com.google.common.collect.Lists,1",
    "sm:import:com.twitter.hraven.datasource.FlowQueueService,1",
    "sm:import:com.twitter.hraven.FlowEvent,1",
    "sm:output:`workflowEvents0`=java.util.List<com.twitter.ambrose.model.Event>",
    "sm:depth:6",
    "sm:import:com.twitter.hraven.FlowKey,1",
    "sm:import:com.twitter.ambrose.util.JSONUtil,1",
    "sm:import:java.util.Properties,1",
    "sm:input:`maxEvents0`=int",
    "sm:import:com.fasterxml.jackson.databind.JsonMappingException,1",
    "sm:import:com.twitter.hraven.datasource.FlowEventService,1",
    "sm:import:java.util.List,1",
    "sm:hc:b1795d8",
    "sm:import:com.twitter.hraven.FlowEventKey,1",
    "sm:import:com.twitter.ambrose.model.DAGNode,1",
    "sm:import:com.twitter.ambrose.model.WorkflowId,1",
    "sm:output:`id0`=com.twitter.ambrose.model.WorkflowId",
    "sm:import:com.twitter.hraven.Flow,1",
    "sm:order:26",
    "sm:src:/home/alex/bachelor/eval2/repos/twitter/ambrose/common/src/main/java/com/twitter/ambrose/service/impl/hraven/HRavenStatsReadService.java",
    "sm:import:com.twitter.ambrose.model.Event,1"
  ]
],[
  201029,
  "String `authToken0` = AuthDB.login(`auth`);\nif (StringUtils.isEmpty(`clientIP0`)) `Placeholder`\nif (`authToken0` != null) {\n    User `user0` = AuthDB.getUserByAuthToken(`authToken0`);\n    if (`user0` != null) {\n        if (`otpEnabled`) `Placeholder`\n        AuthUtil.setTimeout(`servletRequest`.getSession());\n    }\n}\n",
  0,
  [
    "sm:import:com.keybox.manage.model.Auth,1",
    "sm:import:org.apache.commons.lang3.StringUtils,1",
    "sm:import:com.keybox.common.util.AuthUtil,1",
    "sm:input:`servletRequest`=javax.servlet.http.HttpServletRequest",
    "sm:import:com.opensymphony.xwork2.ActionSupport,1",
    "sm:order:47",
    "sm:import:org.apache.struts2.interceptor.ServletRequestAware,1",
    "sm:output:`authToken0`=java.lang.String",
    "sm:input:`otpEnabled`=boolean",
    "sm:import:org.apache.struts2.interceptor.ServletResponseAware,1",
    "sm:import:org.apache.struts2.convention.annotation.Result,1",
    "sm:import:com.keybox.manage.util.OTPUtil,1",
    "sm:import:org.slf4j.LoggerFactory,1",
    "sm:import:com.keybox.manage.model.User,1",
    "sm:src:/home/alex/bachelor/eval2/repos/skavanagh/KeyBox/src/main/java/com/keybox/manage/action/LoginAction.java",
    "sm:import:org.slf4j.Logger,1",
    "sm:import:com.keybox.manage.db.AuthDB,1",
    "sm:import:com.keybox.common.util.AppConfig,1",
    "sm:input:`auth`=com.keybox.manage.model.Auth",
    "sm:import:javax.servlet.http.HttpServletRequest,1",
    "sm:import:javax.servlet.http.HttpServletResponse,1",
    "sm:import:org.apache.struts2.convention.annotation.Action,1",
    "sm:hc:10464b20",
    "sm:depth:11",
    "sm:input:`clientIP0`=java.lang.String"
  ]
],[
  296692,
  "`options0`.addOption(\"f\", true, \"A single json file to execute.\");\n`options0`.addOption(\"e\", false, \"Run endlessly. Default false.\");\n`options0`.addOption(OptionBuilder.withArgName(\"a\").withLongOpt(\"additionalJars\").hasArgs().withValueSeparator(',').withDescription(\"Comma delimited list of additional jars to add to the class path\").create(\"a\"));\n",
  0,
  [
    "sm:src:/home/alex/bachelor/eval2/repos/jmxtrans/jmxtrans/jmxtrans-core/src/main/java/com/googlecode/jmxtrans/cli/CommonsCliArgumentParser.java",
    "sm:import:javax.annotation.Nonnull,1",
    "sm:import:org.apache.commons.cli.GnuParser,1",
    "sm:order:37",
    "sm:import:org.apache.commons.cli.CommandLineParser,1",
    "sm:depth:10",
    "sm:import:org.apache.commons.cli.Options,1",
    "sm:import:org.apache.commons.cli.HelpFormatter,1",
    "sm:input:`options0`=org.apache.commons.cli.Options",
    "sm:import:org.apache.commons.cli.CommandLine,1",
    "sm:import:java.io.File,1",
    "sm:import:org.apache.commons.cli.Option,1",
    "sm:import:org.apache.commons.cli.OptionBuilder,1",
    "sm:hc:a5c3d093"
  ]
],[
  357297,
  "assertThat(`lineProtocol0`).contains(`enumValueToAttribute`(`expectedResultTag0`));\nEnumSet<ResultAttribute> `unexpectedResultTags0` = EnumSet.complementOf(EnumSet.of(`expectedResultTag0`));\nfor(ResultAttribute `unexpectedResultTag0` : `unexpectedResultTags0`) `Placeholder`\n",
  0,
  [
    "sm:import:java.io.IOException,1",
    "sm:output:`unexpectedResultTags0`=java.util.EnumSet<com.googlecode.jmxtrans.model.ResultAttribute>",
    "sm:import:com.google.common.collect.Sets.immutableEnumSet,1",
    "sm:import:org.assertj.core.api.Assertions.assertThat,1",
    "sm:import:com.google.inject.Injector,1",
    "sm:import:java.util.TreeMap,1",
    "sm:import:com.googlecode.jmxtrans.cli.JmxTransConfiguration,1",
    "sm:import:com.googlecode.jmxtrans.model.QueryFixtures.dummyQuery,1",
    "sm:import:com.google.common.collect.ImmutableList,1",
    "sm:import:org.influxdb.dto.BatchPoints,1",
    "sm:import:org.influxdb.InfluxDB,1",
    "sm:import:java.util.EnumSet,1",
    "sm:import:com.googlecode.jmxtrans.model.JmxProcess,1",
    "sm:import:java.util.Map,1",
    "sm:import:java.net.URISyntaxException,1",
    "sm:import:com.googlecode.jmxtrans.model.ResultAttribute,1",
    "sm:import:org.mockito.Mockito.atLeastOnce,1",
    "sm:import:com.googlecode.jmxtrans.guice.JmxTransModule,1",
    "sm:depth:7",
    "sm:import:org.mockito.Captor,1",
    "sm:input:`expectedResultTag0`=com.googlecode.jmxtrans.model.ResultAttribute",
    "sm:import:java.io.File,1",
    "sm:import:org.mockito.Matchers.anyString,1",
    "sm:src:/home/alex/bachelor/eval2/repos/jmxtrans/jmxtrans/jmxtrans-output/jmxtrans-output-influxdb/src/test/java/com/googlecode/jmxtrans/model/output/InfluxDbWriterTests.java",
    "sm:import:com.googlecode.jmxtrans.model.output.InfluxDbWriter.TAG_HOSTNAME,1",
    "sm:import:org.mockito.ArgumentCaptor,1",
    "sm:import:com.googlecode.jmxtrans.model.ServerFixtures.dummyServer,1",
    "sm:import:com.googlecode.jmxtrans.util.JsonUtils,1",
    "sm:import:org.influxdb.InfluxDB.ConsistencyLevel,1",
    "sm:import:org.apache.commons.lang.StringUtils,1",
    "sm:import:org.junit.Test,1",
    "sm:import:com.google.common.collect.ImmutableMap,1",
    "sm:import:org.mockito.Mockito.never,1",
    "sm:import:org.mockito.runners.MockitoJUnitRunner,1",
    "sm:import:org.mockito.Mockito.verify,1",
    "sm:import:org.mockito.Mock,1",
    "sm:import:com.google.common.collect.ImmutableSet,1",
    "sm:import:java.util.List,1",
    "sm:import:com.googlecode.jmxtrans.model.Result,1",
    "sm:order:29",
    "sm:hc:2c968bb3",
    "sm:input:`enumValueToAttribute`=java.lang.String(com.googlecode.jmxtrans.model.ResultAttribute)",
    "sm:import:org.influxdb.dto.Point,1",
    "sm:input:`lineProtocol0`=java.lang.String",
    "sm:import:org.apache.commons.lang.WordUtils,1",
    "sm:import:org.junit.runner.RunWith,1"
  ]
],[
  71281,
  "if (`field0`.isAnnotationPresent(DisconfFileItem.class)) `Placeholder` else {\n    String `defaultValue0` = `config0`.defaultValue();\n    `value0` = `prop0`.getProperty(`name0`, `defaultValue0`);\n}",
  0,
  [
    "sm:import:org.slf4j.LoggerFactory,1",
    "sm:import:org.apache.commons.io.FilenameUtils,1",
    "sm:depth:8",
    "sm:import:com.baidu.disconf.client.utils.ClassUtils,1",
    "sm:import:com.baidu.disconf.client.common.annotations.DisconfFileItem,1",
    "sm:hc:e77b12e9",
    "sm:input:`name0`=java.lang.String",
    "sm:import:com.baidu.disconf.client.utils.ConfigLoaderUtils,1",
    "sm:input:`config0`=com.baidu.disconf.client.config.inner.DisInnerConfigAnnotation",
    "sm:input:`value0`=java.lang.String",
    "sm:import:java.lang.reflect.Field,1",
    "sm:import:java.util.Properties,1",
    "sm:src:/home/alex/bachelor/eval2/repos/knightliao/disconf/disconf-client/src/main/java/com/baidu/disconf/client/support/DisconfAutowareConfig.java",
    "sm:order:24",
    "sm:input:`prop0`=java.util.Properties",
    "sm:import:org.slf4j.Logger,1",
    "sm:import:com.baidu.disconf.client.config.inner.DisInnerConfigAnnotation,1",
    "sm:input:`field0`=java.lang.reflect.Field",
    "sm:import:java.lang.reflect.Modifier,1"
  ]
],[
  392283,
  "EnumSet<ResultAttribute> `resultAttributes0` = EnumSet.noneOf(ResultAttribute.class);\nif (`resultTags0` != null) `Placeholder`\nImmutableSet<ResultAttribute> `result0` = immutableEnumSet(`resultAttributes0`);\n",
  0,
  [
    "sm:import:com.googlecode.jmxtrans.model.output.support.ResultTransformerOutputWriter,1",
    "sm:import:com.google.common.collect.Sets.immutableEnumSet,1",
    "sm:import:com.fasterxml.jackson.annotation.JsonProperty,1",
    "sm:input:`resultTags0`=java.util.List<java.lang.String>",
    "sm:import:java.lang.Boolean.TRUE,1",
    "sm:import:com.google.common.collect.ImmutableList,1",
    "sm:import:org.influxdb.InfluxDB,1",
    "sm:import:java.util.EnumSet,1",
    "sm:import:com.googlecode.jmxtrans.model.ResultAttribute,1",
    "sm:import:com.google.common.base.MoreObjects.firstNonNull,1",
    "sm:hc:231530f",
    "sm:import:org.influxdb.InfluxDBFactory,1",
    "sm:import:org.slf4j.LoggerFactory,1",
    "sm:depth:6",
    "sm:import:com.fasterxml.jackson.annotation.JsonCreator,1",
    "sm:import:org.apache.commons.lang.StringUtils,1",
    "sm:import:org.slf4j.Logger,1",
    "sm:import:com.google.common.collect.ImmutableSet,1",
    "sm:import:java.util.List,1",
    "sm:output:`result0`=com.google.common.collect.ImmutableSet<com.googlecode.jmxtrans.model.ResultAttribute>",
    "sm:import:com.googlecode.jmxtrans.model.OutputWriterFactory,1",
    "sm:src:/home/alex/bachelor/eval2/repos/jmxtrans/jmxtrans/jmxtrans-output/jmxtrans-output-influxdb/src/main/java/com/googlecode/jmxtrans/model/output/InfluxDbWriterFactory.java",
    "sm:order:23",
    "sm:output:`resultAttributes0`=java.util.EnumSet<com.googlecode.jmxtrans.model.ResultAttribute>"
  ]
],[
  136063,
  "`message0`.setMessage(\"A message\");\nMessage `returnedMessage0` = given().body(`message0`).when().post(\"/reflect\").as(Message.class);\nassertThat(`customSerializationUsed`.get(), is(true));\n",
  1,
  [
    "sm:hc:1e1ccde",
    "sm:src:/home/alex/bachelor/eval2/repos/jayway/rest-assured/examples/rest-assured-itest-java/src/test/java/com/jayway/restassured/itest/java/CustomObjectMappingITest.java",
    "sm:import:java.util.concurrent.atomic.AtomicBoolean,2",
    "sm:import:com.jayway.restassured.mapper.ObjectMapperSerializationContext,2",
    "sm:import:org.junit.Before,2",
    "sm:import:com.jayway.restassured.config.ObjectMapperConfig,2",
    "sm:import:org.junit.Assert.assertThat,2",
    "sm:import:com.jayway.restassured.itest.java.support.WithJetty,2",
    "sm:output:`returnedMessage0`=com.jayway.restassured.itest.java.objects.Message",
    "sm:import:com.jayway.restassured.mapper.ObjectMapper,2",
    "sm:import:com.jayway.restassured.internal.mapper.ObjectMapperType.GSON,2",
    "sm:input:`message0`=com.jayway.restassured.itest.java.objects.Message",
    "sm:import:com.jayway.restassured.mapper.factory.GsonObjectMapperFactory,2",
    "sm:order:33",
    "sm:import:com.jayway.restassured.RestAssured.given,2",
    "sm:import:com.jayway.restassured.itest.java.objects.Greeting,2",
    "sm:import:com.jayway.restassured.RestAssured,2",
    "sm:depth:10",
    "sm:import:org.apache.commons.lang3.StringUtils,2",
    "sm:import:org.hamcrest.Matchers.equalTo,2",
    "sm:import:com.jayway.restassured.config.ObjectMapperConfig.objectMapperConfig,2",
    "sm:import:com.google.gson.Gson,2",
    "sm:input:`customSerializationUsed`=java.util.concurrent.atomic.AtomicBoolean",
    "sm:import:com.google.gson.GsonBuilder,2",
    "sm:import:com.google.gson.FieldNamingPolicy.LOWER_CASE_WITH_UNDERSCORES,2",
    "sm:import:org.junit.Test,2",
    "sm:import:com.jayway.restassured.config.RestAssuredConfig,2",
    "sm:import:com.jayway.restassured.mapper.ObjectMapperDeserializationContext,2",
    "sm:import:com.jayway.restassured.itest.java.objects.Message,2",
    "sm:import:org.hamcrest.Matchers.is,2"
  ]
],[
  140135,
  "`g0`.writeNumberField(\"timestamp\", System.currentTimeMillis() / 1000);\n`g0`.writeArrayFieldStart(\"data\");\n`g0`.writeEndArray();\n`g0`.writeEndObject();\nif (`valueCount0` > 0) `Placeholder`\n",
  0,
  [
    "sm:import:java.io.IOException,1",
    "sm:import:java.io.StringWriter,1",
    "sm:import:com.fasterxml.jackson.annotation.JsonProperty,1",
    "sm:import:lombok.ToString,1",
    "sm:import:com.google.common.collect.ImmutableList,1",
    "sm:import:java.net.URLConnection,1",
    "sm:import:java.util.Map,1",
    "sm:import:com.googlecode.jmxtrans.model.Query,1",
    "sm:import:java.net.URL,1",
    "sm:import:java.net.HttpURLConnection,1",
    "sm:input:`valueCount0`=int",
    "sm:import:com.googlecode.jmxtrans.model.naming.typename.TypeNameValuesStringBuilder,1",
    "sm:import:java.net.InetSocketAddress,1",
    "sm:input:`g0`=com.fasterxml.jackson.core.JsonGenerator",
    "sm:import:com.googlecode.jmxtrans.model.ValidationException,1",
    "sm:import:java.io.BufferedReader,1",
    "sm:import:com.google.common.base.Strings.isNullOrEmpty,1",
    "sm:import:com.google.common.base.Charsets.ISO_8859_1,1",
    "sm:import:org.slf4j.LoggerFactory,1",
    "sm:depth:6",
    "sm:import:java.net.Proxy,1",
    "sm:src:/home/alex/bachelor/eval2/repos/jmxtrans/jmxtrans/jmxtrans-output/jmxtrans-output-core/src/main/java/com/googlecode/jmxtrans/model/output/StackdriverWriter.java",
    "sm:import:com.fasterxml.jackson.annotation.JsonCreator,1",
    "sm:import:com.googlecode.jmxtrans.util.NumberUtils.isNumeric,1",
    "sm:import:com.googlecode.jmxtrans.model.Server,1",
    "sm:hc:455f15d8",
    "sm:import:org.slf4j.Logger,1",
    "sm:import:com.google.common.collect.ImmutableMap,1",
    "sm:order:29",
    "sm:import:java.util.List,1",
    "sm:import:com.googlecode.jmxtrans.model.Result,1",
    "sm:import:com.fasterxml.jackson.core.JsonGenerator,1",
    "sm:import:lombok.EqualsAndHashCode,1",
    "sm:import:java.io.InputStreamReader,1",
    "sm:import:org.apache.commons.lang.StringUtils.isAlphanumeric,1",
    "sm:import:com.fasterxml.jackson.core.JsonFactory,1",
    "sm:import:com.google.common.base.MoreObjects,1",
    "sm:import:java.io.Writer,1",
    "sm:import:java.io.InputStream,1",
    "sm:import:java.util.Map.Entry,1",
    "sm:import:java.net.MalformedURLException,1"
  ]
],[
  595669,
  "Favicon `icon0` = `fetch`(`feed0`.getLink());\nif (`icon0` == null) `Placeholder`\nreturn `icon0`;\n",
  0,
  [
    "sm:import:com.commafeed.backend.feed.FeedUtils,1",
    "sm:import:lombok.extern.slf4j.Slf4j,1",
    "sm:import:org.apache.commons.lang3.StringUtils,1",
    "sm:import:org.jsoup.nodes.Document,1",
    "sm:input:`fetch`=com.commafeed.backend.favicon.AbstractFaviconFetcher.Favicon(com.commafeed.backend.model.Feed)",
    "sm:order:18",
    "sm:hc:acbedc99",
    "sm:import:lombok.RequiredArgsConstructor,1",
    "sm:import:com.commafeed.backend.HttpGetter.HttpResult,1",
    "sm:import:javax.inject.Inject,1",
    "sm:import:com.commafeed.backend.HttpGetter,1",
    "sm:import:com.commafeed.backend.model.Feed,1",
    "sm:import:org.jsoup.Jsoup,1",
    "sm:import:javax.inject.Singleton,1",
    "sm:output:`icon0`=com.commafeed.backend.favicon.AbstractFaviconFetcher.Favicon",
    "sm:src:/home/alex/bachelor/eval2/repos/Athou/commafeed/src/main/java/com/commafeed/backend/favicon/DefaultFaviconFetcher.java",
    "sm:import:org.jsoup.select.Elements,1",
    "sm:input:`feed0`=com.commafeed.backend.model.Feed",
    "sm:depth:7"
  ]
],[
  630333,
  "`input10`.add(new Tuple2(\"pandas\", 3));\nList<Tuple2<String,Integer>> `input20` = new ArrayList();\nJavaPairRDD<String,Integer> `result0` = `intersectByKey`(`rdd10`, `rdd20`);\n",
  0,
  [
    "sm:import:java.util.Map,1",
    "sm:import:com.google.common.collect.Iterables,1",
    "sm:output:`result0`=org.apache.spark.api.java.JavaPairRDD<java.lang.String,java.lang.Integer>",
    "sm:import:org.apache.spark.api.java.JavaRDD,1",
    "sm:input:`intersectByKey`=org.apache.spark.api.java.JavaPairRDD<K,V>(org.apache.spark.api.java.JavaPairRDD<K,V>,org.apache.spark.api.java.JavaPairRDD<K,V>)",
    "sm:depth:6",
    "sm:input:`rdd10`=org.apache.spark.api.java.JavaPairRDD<java.lang.String,java.lang.Integer>",
    "sm:import:org.apache.spark.api.java.function.Function2,1",
    "sm:input:`input10`=java.util.List<scala.Tuple2<java.lang.String,java.lang.Integer>>",
    "sm:input:`rdd20`=org.apache.spark.api.java.JavaPairRDD<java.lang.String,java.lang.Integer>",
    "sm:output:`input20`=java.util.List<scala.Tuple2<java.lang.String,java.lang.Integer>>",
    "sm:order:25",
    "sm:import:org.apache.commons.lang.StringUtils,1",
    "sm:import:org.apache.spark.api.java.JavaSparkContext,1",
    "sm:import:org.apache.spark.api.java.function.Function,1",
    "sm:import:org.apache.spark.api.java.JavaPairRDD,1",
    "sm:src:/home/alex/bachelor/eval2/repos/databricks/learning-spark/src/main/java/com/oreilly/learningsparkexamples/java/IntersectByKey.java",
    "sm:import:java.util.List,1",
    "sm:hc:fb23eb44",
    "sm:import:java.util.Map.Entry,1",
    "sm:import:org.apache.spark.api.java.function.FlatMapFunction,1",
    "sm:import:scala.Tuple2,1",
    "sm:import:java.util.ArrayList,1",
    "sm:import:java.util.Arrays,1"
  ]
],[
  444826,
  "CallbackHandler `handler0` = new CallbackHandler();\ntry {\n    Subject `subject0` = `loginContext0`.getSubject();\n    User `user0` = AuthDB.getUserByUID(`con0`, `auth0`.getUsername());\n    if (`user0` == null) `Placeholder`\n}catch (LoginException `e0`) {\n    `authToken0` = null;\n}\n",
  0,
  [
    "sm:import:java.io.IOException,1",
    "sm:import:org.apache.commons.lang3.StringUtils,1",
    "sm:input:`loginContext0`=javax.security.auth.login.LoginContext",
    "sm:import:javax.security.auth.login.LoginContext,1",
    "sm:hc:b6f6f4cd",
    "sm:input:`con0`=java.sql.Connection",
    "sm:order:47",
    "sm:import:javax.security.auth.callback,1",
    "sm:import:javax.security.auth.login.LoginException,1",
    "sm:src:/home/alex/bachelor/eval2/repos/skavanagh/KeyBox/src/main/java/com/keybox/manage/util/ExternalAuthUtil.java",
    "sm:import:java.security.Principal,1",
    "sm:import:com.keybox.manage.db.UserDB,1",
    "sm:output:`handler0`=javax.security.auth.callback.CallbackHandler",
    "sm:import:org.slf4j.LoggerFactory,1",
    "sm:import:com.keybox.manage.model.User,1",
    "sm:import:java.sql.Connection,1",
    "sm:depth:10",
    "sm:import:org.slf4j.Logger,1",
    "sm:import:com.keybox.manage.db.AuthDB,1",
    "sm:import:com.keybox.common.util.AppConfig,1",
    "sm:input:`authToken0`=java.lang.String",
    "sm:input:`auth0`=com.keybox.manage.model.Auth",
    "sm:import:javax.security.auth.Subject,1",
    "sm:import:java.util.UUID,1",
    "sm:import:com.keybox.manage.model.Auth,1"
  ]
],[
  157578,
  "for(int `i0` = 0; `i0` < `tagTitles.length`; `i0`++) {\n    JSONObject `tag0` = new JSONObject();\n    `LOGGER`.log(`Level.TRACE`, \"Found a new tag[title={0}] in article[title={1}]\", new Object[]{`tagTitle0`, `article0`.optString(`Article.ARTICLE_TITLE`)});\n    `tag0`.put(`Tag.TAG_REFERENCE_COUNT`, 1);\n    `ret0`.put(`tag0`);\n}\nreturn `ret0`;\n",
  1,
  [
    "sm:import:org.b3log.solo.repository.ArticleRepository,2",
    "sm:import:java.text.ParseException,2",
    "sm:import:org.b3log.latke.service.annotation.Service,2",
    "sm:import:javax.servlet.ServletContext,2",
    "sm:input:`Tag.TAG_REFERENCE_COUNT`=java.lang.String",
    "sm:import:org.b3log.latke.util.MD5,2",
    "sm:import:org.b3log.solo.repository.UserRepository,2",
    "sm:import:org.b3log.solo.repository.ArchiveDateRepository,2",
    "sm:import:org.b3log.latke.util.Ids,2",
    "sm:import:org.b3log.latke.urlfetch.URLFetchServiceFactory,2",
    "sm:input:`tagTitle0`=java.lang.String",
    "sm:import:org.b3log.latke.repository.jdbc.util.JdbcRepositories,2",
    "sm:import:org.b3log.latke.service.ServiceException,2",
    "sm:import:org.b3log.solo.repository.OptionRepository,2",
    "sm:input:`Article.ARTICLE_TITLE`=java.lang.String",
    "sm:import:java.util.Date,2",
    "sm:import:org.b3log.latke.urlfetch.HTTPRequest,2",
    "sm:import:org.b3log.solo.util.Comments,2",
    "sm:import:org.b3log.solo.repository.CommentRepository,2",
    "sm:import:org.b3log.latke.repository.jdbc.util.JdbcRepositories.CreateTableResult,2",
    "sm:import:org.json.JSONException,2",
    "sm:import:org.b3log.latke.urlfetch.URLFetchService,2",
    "sm:import:org.b3log.solo.repository.ArchiveDateArticleRepository,2",
    "sm:input:`tagTitles.length`=int",
    "sm:src:/home/alex/bachelor/eval2/repos/b3log/solo/src/main/java/org/b3log/solo/service/InitService.java",
    "sm:import:org.b3log.latke.repository.RepositoryException,2",
    "sm:import:org.b3log.latke.service.LangPropsService,2",
    "sm:import:org.b3log.solo.SoloServletListener,2",
    "sm:import:org.b3log.latke.model.User,2",
    "sm:import:org.b3log.latke.util.freemarker.Templates,2",
    "sm:import:org.b3log.solo.repository.TagArticleRepository,2",
    "sm:import:org.b3log.latke.logging.Level,2",
    "sm:import:javax.inject.Inject,2",
    "sm:import:org.b3log.solo.model.Option.DefaultPreference,2",
    "sm:import:org.b3log.solo.util.Skins,2",
    "sm:input:`article0`=org.json.JSONObject",
    "sm:import:org.apache.commons.lang.time.DateFormatUtils,2",
    "sm:import:org.b3log.solo.model,2",
    "sm:import:org.b3log.latke.model.Role,2",
    "sm:import:java.util.List,2",
    "sm:import:org.apache.commons.lang.time.DateUtils,2",
    "sm:depth:10",
    "sm:import:org.b3log.latke.repository.Transaction,2",
    "sm:input:`ret0`=org.json.JSONArray",
    "sm:import:org.b3log.solo.util.TimeZones,2",
    "sm:import:org.json.JSONArray,2",
    "sm:order:49",
    "sm:import:org.json.JSONObject,2",
    "sm:import:org.b3log.latke.Latkes,2",
    "sm:import:org.b3log.solo.util.Thumbnails,2",
    "sm:import:java.net.URL,2",
    "sm:input:`LOGGER`=org.b3log.latke.logging.Logger",
    "sm:import:org.b3log.latke.Keys,2",
    "sm:import:java.util.Set,2",
    "sm:hc:880d0c89",
    "sm:import:org.b3log.latke.plugin.PluginManager,2",
    "sm:import:org.b3log.solo.repository.StatisticRepository,2",
    "sm:import:org.b3log.latke.RuntimeEnv,2",
    "sm:import:org.b3log.solo.repository.TagRepository,2",
    "sm:input:`Level.TRACE`=org.b3log.latke.logging.Level",
    "sm:import:org.b3log.latke.logging.Logger,2"
  ]
],[
  493489,
  "JavaStreamingContext `jssc0` = new JavaStreamingContext(`conf0`, Flags.getInstance().getSlideInterval());\n`jssc0`.checkpoint(Flags.getInstance().getCheckpointDirectory());\nLogAnalyzerTotal `logAnalyzerTotal0` = new LogAnalyzerTotal();\n`jssc0`.start();\n`jssc0`.awaitTermination();\n",
  0,
  [
    "sm:import:java.io.IOException,1",
    "sm:input:`conf0`=org.apache.spark.SparkConf",
    "sm:depth:8",
    "sm:output:`logAnalyzerTotal0`=com.oreilly.learningsparkexamples.java.logs.LogAnalyzerTotal",
    "sm:import:org.apache.spark.streaming.api.java.JavaDStream,1",
    "sm:output:`jssc0`=org.apache.spark.streaming.api.java.JavaStreamingContext",
    "sm:import:org.apache.commons.cli.Options,1",
    "sm:import:org.apache.spark.api.java.JavaRDD,1",
    "sm:import:org.apache.spark.streaming.api.java.JavaStreamingContext,1",
    "sm:import:org.apache.spark.SparkConf,1",
    "sm:src:/home/alex/bachelor/eval2/repos/databricks/learning-spark/src/main/java/com/oreilly/learningsparkexamples/java/logs/LogAnalyzerAppMain.java",
    "sm:import:org.apache.spark.api.java.JavaSparkContext,1",
    "sm:import:org.apache.spark.api.java.function.Function,1",
    "sm:import:org.apache.commons.cli.Option,1",
    "sm:order:38",
    "sm:hc:5618eb77"
  ]
],[
  575030,
  "boolean `foundHeader0` = false;\nfor(int `i0` = 0; (`i0` < `lines.length`) && (`readingHeader0`); `i0`++) {\n    String `line0` = `lines0`[`i0`];\n    if (`line0`.startsWith(`COMMENT_PREFIX`)) `Placeholder` else `Placeholder`\n}\nreturn `result0`.toString();\n",
  0,
  [
    "sm:import:java.io.IOException,1",
    "sm:import:org.apache.commons.lang.Validate,1",
    "sm:import:java.io.Reader,1",
    "sm:src:/home/alex/bachelor/eval2/repos/Bukkit/Bukkit/src/main/java/org/bukkit/configuration/file/YamlConfiguration.java",
    "sm:import:org.yaml.snakeyaml.representer.Representer,1",
    "sm:hc:8e01aae2",
    "sm:import:java.util.Map,1",
    "sm:output:`foundHeader0`=boolean",
    "sm:depth:9",
    "sm:import:java.io.File,1",
    "sm:import:java.util.logging.Level,1",
    "sm:order:43",
    "sm:import:org.yaml.snakeyaml.Yaml,1",
    "sm:input:`readingHeader0`=boolean",
    "sm:import:org.bukkit.configuration.InvalidConfigurationException,1",
    "sm:import:org.bukkit.Bukkit,1",
    "sm:input:`result0`=java.lang.StringBuilder",
    "sm:import:java.io.FileNotFoundException,1",
    "sm:input:`lines0`=java.lang.String[]",
    "sm:import:org.yaml.snakeyaml.error.YAMLException,1",
    "sm:import:org.bukkit.configuration.ConfigurationSection,1",
    "sm:import:org.bukkit.configuration.Configuration,1",
    "sm:import:java.io.InputStream,1",
    "sm:input:`COMMENT_PREFIX`=java.lang.String",
    "sm:input:`lines.length`=int",
    "sm:import:org.yaml.snakeyaml.DumperOptions,1"
  ]
],[
  262572,
  "String `group0` = `args0`[1];\n`topics0`.put(\"pandas\", 1);\nJavaPairDStream<String,String> `input0` = KafkaUtils.createStream(`jssc0`, `zkQuorum0`, `group0`, `topics0`);\n",
  0,
  [
    "sm:output:`group0`=java.lang.String",
    "sm:import:java.util.HashMap,1",
    "sm:input:`topics0`=java.util.Map<java.lang.String,java.lang.Integer>",
    "sm:hc:6d5bb086",
    "sm:import:java.util.Map,1",
    "sm:order:27",
    "sm:src:/home/alex/bachelor/eval2/repos/databricks/learning-spark/src/main/java/com/oreilly/learningsparkexamples/java/KafkaInput.java",
    "sm:import:org.apache.spark.api.java.JavaRDD,1",
    "sm:import:org.apache.spark.streaming.api.java.JavaStreamingContext,1",
    "sm:input:`args0`=java.lang.String[]",
    "sm:import:org.apache.spark.streaming.api.java.JavaPairDStream,1",
    "sm:depth:6",
    "sm:output:`input0`=org.apache.spark.streaming.api.java.JavaPairDStream<java.lang.String,java.lang.String>",
    "sm:import:org.apache.commons.lang.StringUtils,1",
    "sm:import:org.apache.spark.api.java.JavaSparkContext,1",
    "sm:import:org.apache.spark.api.java.function.Function,1",
    "sm:import:java.util.List,1",
    "sm:import:org.apache.spark.streaming.kafka,1",
    "sm:input:`jssc0`=org.apache.spark.streaming.api.java.JavaStreamingContext",
    "sm:import:org.apache.spark.SparkConf,1",
    "sm:import:org.apache.spark.streaming.Duration,1",
    "sm:input:`zkQuorum0`=java.lang.String",
    "sm:import:java.util.Arrays,1"
  ]
],[
  377877,
  "FeedEntryContent `content0` = `feedEntryContentService`.findOrCreate(`entry0`.getContent(), `feed0`.getLink());\n`entry0`.setContent(`content0`);\n`entry0`.setInserted(new Date());\n",
  0,
  [
    "sm:input:`feedEntryContentService`=com.commafeed.backend.service.FeedEntryContentService",
    "sm:hc:76ff00a8",
    "sm:output:`content0`=com.commafeed.backend.model.FeedEntryContent",
    "sm:import:org.apache.commons.codec.digest.DigestUtils,1",
    "sm:import:javax.inject.Inject,1",
    "sm:import:com.commafeed.backend.dao.FeedEntryDAO,1",
    "sm:import:com.commafeed.backend.model.FeedEntry,1",
    "sm:src:/home/alex/bachelor/eval2/repos/Athou/commafeed/src/main/java/com/commafeed/backend/service/FeedUpdateService.java",
    "sm:input:`entry0`=com.commafeed.backend.model.FeedEntry",
    "sm:import:com.commafeed.backend.dao.FeedEntryStatusDAO,1",
    "sm:import:com.commafeed.backend.service.FeedEntryFilteringService.FeedEntryFilterException,1",
    "sm:import:com.commafeed.backend.model.Feed,1",
    "sm:import:com.commafeed.backend.model.FeedEntryStatus,1",
    "sm:import:com.commafeed.backend.model.FeedSubscription,1",
    "sm:import:java.util.List,1",
    "sm:import:lombok.extern.slf4j.Slf4j,1",
    "sm:order:26",
    "sm:import:com.commafeed.backend.model.FeedEntryContent,1",
    "sm:import:lombok.RequiredArgsConstructor,1",
    "sm:import:java.util.Date,1",
    "sm:import:javax.inject.Singleton,1",
    "sm:input:`feed0`=com.commafeed.backend.model.Feed",
    "sm:depth:7"
  ]
],[
  445052,
  "String `connectionURI0` = \"jdbc:h2:\" + `getDBPath`() + \"/keybox;CIPHER=AES\";\n`connectionPool0`.setTestOnBorrow(`TEST_ON_BORROW`);\n`connectionPool0`.setMinIdle(`MIN_IDLE`);\n",
  0,
  [
    "sm:input:`getDBPath`=java.lang.String()",
    "sm:import:org.slf4j.LoggerFactory,1",
    "sm:src:/home/alex/bachelor/eval2/repos/skavanagh/KeyBox/src/main/java/com/keybox/manage/util/DSPool.java",
    "sm:output:`connectionURI0`=java.lang.String",
    "sm:import:org.apache.commons.lang3.StringUtils,1",
    "sm:input:`MIN_IDLE`=int",
    "sm:order:21",
    "sm:input:`connectionPool0`=org.apache.commons.pool.impl.GenericObjectPool",
    "sm:input:`TEST_ON_BORROW`=boolean",
    "sm:import:com.keybox.common.util.AppConfig,1",
    "sm:hc:51291743",
    "sm:import:org.apache.commons.dbcp,1",
    "sm:import:org.slf4j.Logger,1",
    "sm:import:org.apache.commons.pool.impl.GenericObjectPool,1",
    "sm:depth:7"
  ]
],[
  389177,
  "`set`.add(\"9\");\n`set`.add(\"0\");\nAssert.assertEquals(\"1\", `set`.asList().get(1));\n",
  0,
  [
    "sm:depth:6",
    "sm:order:22",
    "sm:import:org.junit.Assert,1",
    "sm:import:java.util.Comparator,1",
    "sm:import:org.junit.Before,1",
    "sm:src:/home/alex/bachelor/eval2/repos/Athou/commafeed/src/test/java/com/commafeed/backend/FixedSizeSortedSetTest.java",
    "sm:hc:448a3d9f",
    "sm:import:org.apache.commons.lang3.ObjectUtils,1",
    "sm:import:org.junit.Test,1",
    "sm:input:`set`=com.commafeed.backend.FixedSizeSortedSet<java.lang.String>"
  ]
],[
  210630,
  "PrintStream `captor0` = new PrintStream(new WriterOutputStream(`writer0`), true);\ngiven().config(config().logConfig(new LogConfig(`captor0`, true))).log().headers().header(\"myHeader1\", \"myHeaderValue1\").header(\"myHeader2\", \"myHeaderValue2\").header(\"myMultiHeader\", \"myMultiHeaderValue1\", \"myMultiHeaderValue2\").when().get(\"/multiHeaderReflect\");\nassertThat(`writer0`.toString(), equalTo(\"Headers:\\t\\tmyHeader1=myHeaderValue1\\n\\t\\t\\t\\tmyHeader2=myHeaderValue2\\n\\t\\t\\t\\tmyMultiHeader=myMultiHeaderValue1\\n\\t\\t\\t\\tmyMultiHeader=myMultiHeaderValue2\\n\\t\\t\\t\\tAccept=*/*\" + `LINE_SEPARATOR`));\n",
  0,
  [
    "sm:import:com.jayway.restassured.config.LogConfig.logConfig,1",
    "sm:import:org.hamcrest.Matchers,1",
    "sm:import:java.io.StringWriter,1",
    "sm:import:com.jayway.restassured.RestAssured.given,1",
    "sm:import:com.jayway.restassured.RestAssured,1",
    "sm:import:java.net.URLEncoder,1",
    "sm:import:com.jayway.restassured.response.Response,1",
    "sm:import:com.jayway.restassured.filter.log.RequestLoggingFilter,1",
    "sm:import:com.jayway.restassured.itest.java.objects.Message,1",
    "sm:import:com.jayway.restassured.filter.log.ResponseLoggingFilter.logResponseToIfMatches,1",
    "sm:import:com.jayway.restassured.filter.log.LogDetail.COOKIES,1",
    "sm:output:`captor0`=java.io.PrintStream",
    "sm:import:com.jayway.restassured.specification.FilterableResponseSpecification,1",
    "sm:import:com.jayway.restassured.parsing.Parser.JSON,1",
    "sm:import:com.jayway.restassured.filter.log.RequestLoggingFilter.logRequestTo,1",
    "sm:import:org.junit.Before,1",
    "sm:import:com.jayway.restassured.itest.java.support.WithJetty,1",
    "sm:import:com.jayway.restassured.filter.log.ResponseLoggingFilter.logResponseTo,1",
    "sm:import:com.jayway.restassured.config.EncoderConfig.encoderConfig,1",
    "sm:import:com.jayway.restassured.filter.log.ErrorLoggingFilter.logErrorsTo,1",
    "sm:import:org.junit.After,1",
    "sm:src:/home/alex/bachelor/eval2/repos/jayway/rest-assured/examples/rest-assured-itest-java/src/test/java/com/jayway/restassured/itest/java/LoggingITest.java",
    "sm:import:java.io.UnsupportedEncodingException,1",
    "sm:import:com.jayway.restassured.specification.FilterableRequestSpecification,1",
    "sm:input:`LINE_SEPARATOR`=java.lang.String",
    "sm:import:com.jayway.restassured.http.ContentType,1",
    "sm:import:com.jayway.restassured.filter.Filter,1",
    "sm:import:org.apache.commons.io.IOUtils,1",
    "sm:import:org.apache.commons.io.output.WriterOutputStream,1",
    "sm:import:java.io.PrintStream,1",
    "sm:import:org.junit.Test,1",
    "sm:import:com.jayway.restassured.config.LogConfig,1",
    "sm:import:org.junit.Assert.assertThat,1",
    "sm:input:`writer0`=java.io.StringWriter",
    "sm:import:com.jayway.restassured.filter.log.ResponseLoggingFilter,1",
    "sm:import:com.jayway.restassured.config.RestAssuredConfig.config,1",
    "sm:hc:47d390d5",
    "sm:import:com.jayway.restassured.builder.ResponseBuilder,1",
    "sm:import:com.jayway.restassured.filter.log.LogDetail,1",
    "sm:import:org.junit.Assert.fail,1",
    "sm:import:java.io.InputStream,1",
    "sm:import:com.jayway.restassured.itest.java.objects.ScalatraObject,1",
    "sm:import:com.jayway.restassured.filter.FilterContext,1",
    "sm:depth:13",
    "sm:import:com.jayway.restassured.RestAssured.expect,1",
    "sm:order:58",
    "sm:import:com.jayway.restassured.itest.java.objects.Greeting,1"
  ]
],[
  356571,
  "`urlConnection0`.setDoInput(true);\n`urlConnection0`.setDoOutput(true);\n`urlConnection0`.setRequestProperty(\"content-type\", \"application/json; charset=utf-8\");\nif (`responseCode0` != 200) `Placeholder`\nif (`logger`.isTraceEnabled()) {\n    StringWriter `out0` = new StringWriter();\n    `logger`.trace(`out0`.toString());\n}\n",
  0,
  [
    "sm:import:java.io.IOException,1",
    "sm:import:java.io.StringWriter,1",
    "sm:input:`responseCode0`=int",
    "sm:import:com.fasterxml.jackson.annotation.JsonProperty,1",
    "sm:import:org.apache.commons.io.output.NullOutputStream,1",
    "sm:import:com.google.common.annotations.VisibleForTesting,1",
    "sm:import:com.fasterxml.jackson.core.Base64Variants,1",
    "sm:input:`logger`=org.slf4j.Logger",
    "sm:import:com.google.common.collect.ImmutableList,1",
    "sm:import:java.util.Map,1",
    "sm:import:com.googlecode.jmxtrans.model.Query,1",
    "sm:import:java.net.URL,1",
    "sm:import:java.net.HttpURLConnection,1",
    "sm:depth:9",
    "sm:import:java.util.concurrent.TimeUnit,1",
    "sm:import:java.net.InetSocketAddress,1",
    "sm:import:com.google.common.base.Charsets,1",
    "sm:import:com.googlecode.jmxtrans.model.ValidationException,1",
    "sm:import:com.fasterxml.jackson.core.JsonEncoding,1",
    "sm:import:org.slf4j.LoggerFactory,1",
    "sm:import:java.io.OutputStream,1",
    "sm:src:/home/alex/bachelor/eval2/repos/jmxtrans/jmxtrans/jmxtrans-output/jmxtrans-output-core/src/main/java/com/googlecode/jmxtrans/model/output/LibratoWriter.java",
    "sm:import:java.net.Proxy,1",
    "sm:import:com.fasterxml.jackson.annotation.JsonCreator,1",
    "sm:import:com.googlecode.jmxtrans.util.NumberUtils.isNumeric,1",
    "sm:import:com.googlecode.jmxtrans.model.Server,1",
    "sm:import:org.apache.commons.io.IOUtils,1",
    "sm:import:com.googlecode.jmxtrans.model.naming.KeyUtils,1",
    "sm:import:org.slf4j.Logger,1",
    "sm:hc:d3ee1635",
    "sm:import:java.util.List,1",
    "sm:input:`urlConnection0`=java.net.HttpURLConnection",
    "sm:import:com.googlecode.jmxtrans.model.Result,1",
    "sm:import:lombok.EqualsAndHashCode,1",
    "sm:import:com.fasterxml.jackson.core.JsonGenerator,1",
    "sm:import:com.fasterxml.jackson.core.JsonFactory,1",
    "sm:import:com.google.common.base.MoreObjects,1",
    "sm:order:42",
    "sm:import:java.io.InputStream,1",
    "sm:import:java.net.MalformedURLException,1",
    "sm:import:com.googlecode.jmxtrans.model.naming.StringUtils,1"
  ]
],[
  283385,
  "try {\n    StringBuffer `sb0` = new StringBuffer();\n    if (`groupName0` != \"/\") {\n        Stat `stat0` = new Stat();\n        byte[] `data0` = `zk`.getData(`groupName0`, null, `stat0`);\n        if (`stat0` != null) `Placeholder`\n    } else `Placeholder`\n}catch (KeeperException.NoNodeException `e0`) {\n    `LOGGER`.info(\"Group %s does not exist\\n\", `groupName0`);\n}",
  0,
  [
    "sm:import:java.util.List,1",
    "sm:import:org.slf4j.LoggerFactory,1",
    "sm:import:java.nio.charset.Charset,1",
    "sm:input:`LOGGER`=org.slf4j.Logger",
    "sm:import:org.apache.zookeeper.data.Stat,1",
    "sm:depth:11",
    "sm:order:54",
    "sm:input:`zk`=org.apache.zookeeper.ZooKeeper",
    "sm:import:org.apache.commons.lang.StringUtils,1",
    "sm:hc:16f68c90",
    "sm:input:`groupName0`=java.lang.String",
    "sm:src:/home/alex/bachelor/eval2/repos/knightliao/disconf/disconf-core/src/main/java/com/baidu/disconf/core/common/zookeeper/inner/PrintZookeeperTree.java",
    "sm:import:org.slf4j.Logger,1",
    "sm:import:org.apache.zookeeper.KeeperException,1"
  ]
],[
  332371,
  "if (`host0` == null || `port0` < 0 || `host0`.isEmpty() || `proxyAddress0` == null) `Placeholder`\nSocket `socket0`;\n",
  0,
  [
    "sm:import:javax.net.ssl.SSLSocketFactory,1",
    "sm:import:java.io.IOException,1",
    "sm:hc:9374ff40",
    "sm:import:java.net.Socket,1",
    "sm:import:org.apache.commons.httpclient.UsernamePasswordCredentials,1",
    "sm:input:`host0`=java.lang.String",
    "sm:import:org.apache.commons.httpclient.ProxyClient,1",
    "sm:import:java.net.ProtocolException,1",
    "sm:import:java.net.InetSocketAddress,1",
    "sm:import:org.apache.commons.httpclient.NTCredentials,1",
    "sm:import:org.slf4j.LoggerFactory,1",
    "sm:import:org.apache.commons.httpclient.auth.AuthScope,1",
    "sm:import:java.net.Proxy,1",
    "sm:src:/home/alex/bachelor/eval2/repos/notnoop/java-apns/src/main/java/com/notnoop/apns/internal/TlsTunnelBuilder.java",
    "sm:import:org.apache.commons.httpclient.ConnectMethod,1",
    "sm:input:`proxyAddress0`=java.net.InetSocketAddress",
    "sm:import:org.slf4j.Logger,1",
    "sm:input:`port0`=int",
    "sm:output:`socket0`=java.net.Socket",
    "sm:order:23",
    "sm:import:edu.umd.cs.findbugs.annotations.SuppressFBWarnings,1",
    "sm:depth:7"
  ]
],[
  248084,
  "`publicKey` = PublicKeyDB.getPublicKey(`publicKey`.getId());\n`profileList` = ProfileDB.getAllProfiles();\n`userList` = UserDB.getUserSet(new SortedSet(`SessionAuditDB.SORT_BY_USERNAME`)).getItemList();\nreturn `SUCCESS`;\n",
  1,
  [
    "sm:import:com.keybox.manage.util.EncryptionUtil,2",
    "sm:input:`SUCCESS`=java.lang.String",
    "sm:import:org.apache.struts2.interceptor.ServletRequestAware,2",
    "sm:import:org.slf4j.Logger,2",
    "sm:import:com.keybox.manage.util.RefreshAuthKeyUtil,2",
    "sm:hc:55f12ec9",
    "sm:import:java.io.OutputStream,2",
    "sm:import:com.opensymphony.xwork2.ActionSupport,2",
    "sm:input:`publicKey`=com.keybox.manage.model.PublicKey",
    "sm:import:com.keybox.common.util.AppConfig,2",
    "sm:import:javax.servlet.http.HttpServletRequest,2",
    "sm:import:org.apache.struts2.convention.annotation.Action,2",
    "sm:input:`SessionAuditDB.SORT_BY_USERNAME`=java.lang.String",
    "sm:import:com.keybox.common.util.AuthUtil,2",
    "sm:import:com.jcraft.jsch.KeyPair,2",
    "sm:input:`profileList`=java.util.List<com.keybox.manage.model.Profile>",
    "sm:import:java.util.List,2",
    "sm:import:javax.servlet.http.HttpServletResponse,2",
    "sm:import:com.keybox.manage.db,2",
    "sm:import:java.io.ByteArrayOutputStream,2",
    "sm:input:`userList`=java.util.List<com.keybox.manage.model.User>",
    "sm:import:org.apache.commons.lang3.StringUtils,2",
    "sm:import:com.keybox.manage.util.SSHUtil,2",
    "sm:src:/home/alex/bachelor/eval2/repos/skavanagh/KeyBox/src/main/java/com/keybox/manage/action/AuthKeysAction.java",
    "sm:import:org.slf4j.LoggerFactory,2",
    "sm:order:29",
    "sm:import:org.apache.struts2.interceptor.ServletResponseAware,2",
    "sm:import:com.keybox.manage.util.PasswordUtil,2",
    "sm:import:org.apache.struts2.convention.annotation.Result,2",
    "sm:import:com.jcraft.jsch.JSch,2",
    "sm:import:com.keybox.manage.model,2",
    "sm:depth:7"
  ]
],[
  445815,
  "SchSession `schSession0` = null;\nif (`hostSystem0`.getStatusCd().equals(`HostSystem.SUCCESS_STATUS`)) {\n    UserSchSessions `userSchSessions0` = `userSessionMap0`.get(`sessionId0`);\n    `userSchSessions0`.setSchSessionMap(`schSessionMap0`);\n}\nSystemDB.updateSystem(`hostSystem0`);\nreturn `hostSystem0`;\n",
  0,
  [
    "sm:input:`sessionId0`=java.lang.Long",
    "sm:import:java.util.HashMap,1",
    "sm:import:org.apache.commons.lang3.StringUtils,1",
    "sm:order:37",
    "sm:src:/home/alex/bachelor/eval2/repos/skavanagh/KeyBox/src/main/java/com/keybox/manage/util/SSHUtil.java",
    "sm:input:`hostSystem0`=com.keybox.manage.model.HostSystem",
    "sm:input:`schSessionMap0`=java.util.Map<java.lang.Integer,com.keybox.manage.model.SchSession>",
    "sm:import:java.util.Map,1",
    "sm:depth:9",
    "sm:import:org.slf4j.LoggerFactory,1",
    "sm:import:java.io,1",
    "sm:import:org.slf4j.Logger,1",
    "sm:import:com.keybox.common.util.AppConfig,1",
    "sm:import:java.util.List,1",
    "sm:import:com.keybox.manage.task.SecureShellTask,1",
    "sm:import:com.keybox.manage.model,1",
    "sm:input:`HostSystem.SUCCESS_STATUS`=java.lang.String",
    "sm:hc:6986473d",
    "sm:import:org.apache.commons.io.FileUtils,1",
    "sm:input:`userSessionMap0`=java.util.Map<java.lang.Long,com.keybox.manage.model.UserSchSessions>",
    "sm:import:java.util.UUID,1",
    "sm:import:com.jcraft.jsch,1",
    "sm:output:`schSession0`=com.keybox.manage.model.SchSession",
    "sm:import:com.keybox.manage.db,1"
  ]
],[
  24386,
  "boolean `result0` = false;\nif (`fileExtensions0` == null || `fileExtensions.length` == 0) `Placeholder` else {\n    String[] `withDotExtensions0` = new String[`fileExtensions.length`];\n    for(String `fileExtension0` : `withDotExtensions0`) `Placeholder`\n}\nreturn `result0`;\n",
  0,
  [
    "sm:output:`result0`=boolean",
    "sm:import:java.io.IOException,1",
    "sm:order:37",
    "sm:import:java.util.regex.Matcher,1",
    "sm:import:org.apache.commons.beanutils.ConversionException,1",
    "sm:import:com.google.common.base.CharMatcher,1",
    "sm:import:java.nio.file.Path,1",
    "sm:import:java.net.URL,1",
    "sm:import:java.net.URISyntaxException,1",
    "sm:import:java.lang.reflect.InvocationTargetException,1",
    "sm:input:`fileExtensions.length`=int",
    "sm:import:java.util.regex.PatternSyntaxException,1",
    "sm:import:java.io.File,1",
    "sm:src:/home/alex/bachelor/eval2/repos/checkstyle/checkstyle/src/main/java/com/puppycrawl/tools/checkstyle/utils/CommonUtils.java",
    "sm:depth:10",
    "sm:import:com.puppycrawl.tools.checkstyle.api.CheckstyleException,1",
    "sm:import:java.lang.reflect.Constructor,1",
    "sm:import:java.nio.file.Paths,1",
    "sm:input:`fileExtensions0`=java.lang.String[]",
    "sm:import:java.util.regex.Pattern,1",
    "sm:hc:ae0bdb9a",
    "sm:import:java.io.Closeable,1",
    "sm:import:java.net.MalformedURLException,1",
    "sm:import:java.net.URI,1"
  ]
],[
  651394,
  "InputStream `inputStream0` = expect().log().headers().when().get(\"http://powermock.googlecode.com/files/powermock-easymock-junit-1.4.12.zip\").asInputStream();\nByteArrayOutputStream `byteArrayOutputStream0` = new ByteArrayOutputStream();\nIOUtils.copy(`inputStream0`, `byteArrayOutputStream0`);\nIOUtils.closeQuietly(`byteArrayOutputStream0`);\n",
  0,
  [
    "sm:import:com.jayway.restassured.config.RestAssuredConfig.config,1",
    "sm:import:org.hamcrest.Matchers,1",
    "sm:import:java.io.StringWriter,1",
    "sm:import:java.io.ByteArrayOutputStream,1",
    "sm:output:`byteArrayOutputStream0`=java.io.ByteArrayOutputStream",
    "sm:order:37",
    "sm:import:com.jayway.restassured.RestAssured,1",
    "sm:depth:11",
    "sm:import:java.io.InputStream,1",
    "sm:src:/home/alex/bachelor/eval2/repos/jayway/rest-assured/examples/rest-assured-itest-java/src/test/java/com/jayway/restassured/itest/java/FileDownloadITest.java",
    "sm:import:com.jayway.restassured.itest.java.support.WithJetty,1",
    "sm:import:org.apache.commons.io.IOUtils,1",
    "sm:import:java.io.PrintStream,1",
    "sm:import:org.apache.commons.io.output.WriterOutputStream,1",
    "sm:import:org.junit.Test,1",
    "sm:output:`inputStream0`=java.io.InputStream",
    "sm:hc:7645da35",
    "sm:import:com.jayway.restassured.config.LogConfig,1",
    "sm:import:org.junit.Assert.assertThat,1"
  ]
],[
  152394,
  "App `myServer0` = new App();\n`readOptionsFromCommandLine`(`args0`, `parser0`, `options0`, `myServer0`);\n`checksRunningOfAnotherServerInstance`();\n",
  0,
  [
    "sm:import:org.apache.commons.cli.GnuParser,1",
    "sm:input:`options0`=org.apache.commons.cli.Options",
    "sm:import:org.apache.commons.cli.CommandLine,1",
    "sm:import:org.eclipse.jetty.jsp.JettyJspServlet,1",
    "sm:input:`checksRunningOfAnotherServerInstance`=void()",
    "sm:input:`parser0`=org.apache.commons.cli.CommandLineParser",
    "sm:output:`myServer0`=com.yahoo.dba.tools.myperfserver.App",
    "sm:import:org.apache.tomcat.InstanceManager,1",
    "sm:import:java.net.URISyntaxException,1",
    "sm:import:org.apache.commons.cli.Options,1",
    "sm:import:org.apache.commons.cli.CommandLineParser,1",
    "sm:import:org.eclipse.jetty.webapp.WebAppContext,1",
    "sm:import:java.io.File,1",
    "sm:order:18",
    "sm:import:org.eclipse.jetty.server.ConnectionFactory,1",
    "sm:import:org.apache.commons.cli.ParseException,1",
    "sm:input:`args0`=java.lang.String[]",
    "sm:import:org.eclipse.jetty.plus.annotation.ContainerInitializer,1",
    "sm:import:org.eclipse.jetty.apache.jsp.JettyJasperInitializer,1",
    "sm:import:org.eclipse.jetty.server.ServerConnector,1",
    "sm:input:`readOptionsFromCommandLine`=void(java.lang.String[],org.apache.commons.cli.CommandLineParser,org.apache.commons.cli.Options,com.yahoo.dba.tools.myperfserver.App)",
    "sm:import:java.lang.management.RuntimeMXBean,1",
    "sm:depth:6",
    "sm:import:java.util.Date,1",
    "sm:src:/home/alex/bachelor/eval2/repos/yahoo/mysql_perf_analyzer/perfJettyServer/src/main/java/com/yahoo/dba/tools/myperfserver/App.java",
    "sm:import:javax.servlet.ServletContainerInitializer,1",
    "sm:import:org.eclipse.jetty.servlet.ServletHolder,1",
    "sm:import:java.util.List,1",
    "sm:import:org.eclipse.jetty.server.Server,1",
    "sm:import:org.eclipse.jetty.annotations.ServletContainerInitializersStarter,1",
    "sm:import:org.apache.tomcat.SimpleInstanceManager,1",
    "sm:hc:b91dc67e",
    "sm:import:java.util.ArrayList,1",
    "sm:import:java.net.URI,1"
  ]
],[
  338312,
  "if (`u0` < `limit`) {\n    int `i0` = 0;\n    while (`u0` / 20 < `limit`) {\n        double `pdf0` = `pd`.probability(`i0`);\n        `steps0`.add(new WeightedThing<Integer>(`i0`, `pdf0`));\n        `i0`++;\n    }\n}\nreturn `partial`.sample(`u0`);\n",
  0,
  [
    "sm:import:java.util.List,1",
    "sm:import:org.apache.mahout.common.RandomWrapper,1",
    "sm:input:`limit`=double",
    "sm:input:`u0`=double",
    "sm:input:`partial`=org.apache.mahout.math.random.Multinomial<java.lang.Integer>",
    "sm:order:46",
    "sm:import:com.google.common.collect.Lists,1",
    "sm:import:org.apache.commons.math3.distribution.PoissonDistribution,1",
    "sm:src:/home/alex/bachelor/eval2/repos/apache/mahout/math/src/main/java/org/apache/mahout/math/random/PoissonSampler.java",
    "sm:import:org.apache.mahout.common.RandomUtils,1",
    "sm:depth:12",
    "sm:input:`pd`=org.apache.commons.math3.distribution.PoissonDistribution",
    "sm:hc:384bcb58",
    "sm:input:`steps0`=java.util.List<org.apache.mahout.math.random.WeightedThing<java.lang.Integer>>"
  ]
],[
  406094,
  "try {\n    if (`pendingSystemStatus` != null) `Placeholder`\n    if (`pendingSystemStatus` == null) {\n        FileUtils.deleteQuietly(`delFile0`);\n        if (`delDir0`.isDirectory()) {\n            Calendar `expireTime0` = Calendar.getInstance();\n            `expireTime0`.add(`Calendar.HOUR`, -48);\n            while (`filesToDelete0`.hasNext()) `Placeholder`\n        }\n    }\n    `hostSystemList` = SystemStatusDB.getAllSystemStatus(`userId0`);\n}catch (Exception `e0`) {\n    `log`.error(`e0`.toString(), `e0`);\n}",
  0,
  [
    "sm:import:org.apache.commons.io.filefilter.TrueFileFilter,1",
    "sm:src:/home/alex/bachelor/eval2/repos/skavanagh/KeyBox/src/main/java/com/keybox/manage/action/UploadAndPushAction.java",
    "sm:import:com.keybox.common.util.AuthUtil,1",
    "sm:import:com.keybox.manage.db.SystemDB,1",
    "sm:input:`hostSystemList`=java.util.List<com.keybox.manage.model.HostSystem>",
    "sm:input:`userId0`=java.lang.Long",
    "sm:order:67",
    "sm:import:com.keybox.manage.db.SystemStatusDB,1",
    "sm:import:com.opensymphony.xwork2.ActionSupport,1",
    "sm:input:`delDir0`=java.io.File",
    "sm:import:org.apache.struts2.interceptor.ServletRequestAware,1",
    "sm:input:`filesToDelete0`=java.util.Iterator<java.io.File>",
    "sm:import:java.io.File,1",
    "sm:import:org.apache.struts2.convention.annotation.Result,1",
    "sm:input:`delFile0`=java.io.File",
    "sm:import:org.slf4j.LoggerFactory,1",
    "sm:input:`Calendar.HOUR`=int",
    "sm:import:com.keybox.manage.model.HostSystem,1",
    "sm:import:com.keybox.manage.util.SSHUtil,1",
    "sm:import:com.keybox.manage.util.DBUtils,1",
    "sm:import:java.util,1",
    "sm:import:org.slf4j.Logger,1",
    "sm:import:com.keybox.manage.model.UserSchSessions,1",
    "sm:import:org.apache.commons.io.filefilter.AgeFileFilter,1",
    "sm:import:javax.servlet.http.HttpServletRequest,1",
    "sm:import:com.keybox.manage.model.SchSession,1",
    "sm:import:org.apache.struts2.convention.annotation.Action,1",
    "sm:import:org.apache.commons.io.FileUtils,1",
    "sm:input:`log`=org.slf4j.Logger",
    "sm:input:`pendingSystemStatus`=com.keybox.manage.model.HostSystem",
    "sm:hc:bd631773",
    "sm:depth:14",
    "sm:import:com.keybox.manage.model.Auth,1"
  ]
],[
  192285,
  "String `root0` = `doc0`.children().get(0).tagName();\nif (\"html\".equals(`root0`)) {\n    Elements `rss0` = `doc0`.select(\"link[type=application/rss+xml]\");\n    if (!`atom0`.isEmpty()) `Placeholder` else `Placeholder`\n}\nreturn `foundUrl0`;\n",
  0,
  [
    "sm:import:java.io.IOException,1",
    "sm:import:org.apache.commons.codec.digest.DigestUtils,1",
    "sm:hc:a4bb46e6",
    "sm:import:javax.inject.Inject,1",
    "sm:input:`foundUrl0`=java.lang.String",
    "sm:output:`root0`=java.lang.String",
    "sm:depth:9",
    "sm:import:org.apache.commons.codec.binary.StringUtils,1",
    "sm:import:com.commafeed.backend.HttpGetter,1",
    "sm:import:com.commafeed.backend.HttpGetter.NotModifiedException,1",
    "sm:import:com.rometools.rome.io.FeedException,1",
    "sm:input:`doc0`=org.jsoup.nodes.Document",
    "sm:import:com.commafeed.backend.HttpGetter.HttpResult,1",
    "sm:import:com.commafeed.backend.model.Feed,1",
    "sm:import:org.jsoup.Jsoup,1",
    "sm:import:org.apache.http.client.ClientProtocolException,1",
    "sm:import:lombok.extern.slf4j.Slf4j,1",
    "sm:order:39",
    "sm:import:org.jsoup.nodes.Document,1",
    "sm:src:/home/alex/bachelor/eval2/repos/Athou/commafeed/src/main/java/com/commafeed/backend/feed/FeedFetcher.java",
    "sm:import:lombok.RequiredArgsConstructor,1",
    "sm:import:java.util.Date,1",
    "sm:import:javax.inject.Singleton,1",
    "sm:input:`atom0`=org.jsoup.select.Elements",
    "sm:import:org.jsoup.select.Elements,1"
  ]
],[
  569409,
  "if (`alias0`.contains(\"subquery\")) {\n    Matcher `m0` = `SUBQUERY_ALIAS`.matcher(`alias0`);\n    String `dot0` = \"\";\n    StringBuilder `sb0` = new StringBuilder();\n    while (`m0`.find()) `Placeholder`\n} else `Placeholder`",
  0,
  [
    "sm:import:java.io.IOException,1",
    "sm:import:org.apache.commons.logging.LogFactory,1",
    "sm:import:java.util.Set,1",
    "sm:import:com.google.common.collect.Maps,1",
    "sm:import:java.lang.reflect.Method,1",
    "sm:hc:9c784c10",
    "sm:import:java.util.regex.Matcher,1",
    "sm:input:`alias0`=java.lang.String",
    "sm:import:org.apache.hadoop.conf.Configuration,1",
    "sm:import:java.util.Map,1",
    "sm:depth:8",
    "sm:import:org.apache.hadoop.hive.ql.plan.api.OperatorType,1",
    "sm:import:org.apache.commons.logging.Log,1",
    "sm:import:java.util.Collections,1",
    "sm:import:com.google.common.collect.Lists,1",
    "sm:import:org.apache.hadoop.hive.ql.exec.Operator,1",
    "sm:order:35",
    "sm:import:org.apache.hadoop.hive.ql.exec.Utilities,1",
    "sm:import:com.google.common.collect.Sets,1",
    "sm:import:java.util.LinkedHashMap,1",
    "sm:import:com.twitter.ambrose.model.Job,1",
    "sm:import:org.apache.hadoop.hive.ql.plan.MapredWork,1",
    "sm:import:org.apache.hadoop.hive.ql.exec.Task,1",
    "sm:import:java.util.List,1",
    "sm:import:org.apache.hadoop.hive.ql.QueryPlan,1",
    "sm:import:java.util.regex.Pattern,1",
    "sm:src:/home/alex/bachelor/eval2/repos/twitter/ambrose/hive/src/main/java/com/twitter/ambrose/hive/HiveDAGTransformer.java",
    "sm:import:com.twitter.ambrose.model.DAGNode,1",
    "sm:import:org.apache.hadoop.hive.ql.plan.api.Adjacency,1",
    "sm:import:org.apache.hadoop.hive.ql.plan.api.Graph,1",
    "sm:import:java.io.Serializable,1",
    "sm:input:`SUBQUERY_ALIAS`=java.util.regex.Pattern",
    "sm:import:com.google.common.base.Function,1",
    "sm:import:org.apache.hadoop.hive.ql.hooks.HookContext,1",
    "sm:import:java.util.ArrayList,1"
  ]
],[
  417151,
  "IOUtils.write(\"Something21\", new FileOutputStream(`file0`));\ngiven().multiPart(\"controlName\", \"original\", new FileInputStream(`file0`)).when().post(\"/fileUpload2\").then().body(\"size\", greaterThan(10)).body(\"name\", equalTo(\"controlName\")).body(\"originalName\", equalTo(\"original\"));\n",
  0,
  [
    "sm:import:org.hamcrest.Matchers,1",
    "sm:import:java.io.IOException,1",
    "sm:import:org.junit.Rule,1",
    "sm:import:org.springframework.test.context.ContextConfiguration,1",
    "sm:order:44",
    "sm:import:org.springframework.test.context.web.WebAppConfiguration,1",
    "sm:import:com.jayway.restassured.module.mockmvc.RestAssuredMockMvc.given,1",
    "sm:import:org.junit.rules.TemporaryFolder,1",
    "sm:import:org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors.csrf,1",
    "sm:import:java.io.FileInputStream,1",
    "sm:hc:b2b5d8b1",
    "sm:import:com.jayway.restassured.module.mockmvc.config.RestAssuredMockMvcConfig.config,1",
    "sm:import:org.junit.Before,1",
    "sm:src:/home/alex/bachelor/eval2/repos/jayway/rest-assured/examples/spring-mvc-webapp/src/test/java/com/jayway/restassured/examples/springmvc/controller/MultiPartFileUploadITest.java",
    "sm:import:org.springframework.test.context.junit4.SpringJUnit4ClassRunner,1",
    "sm:import:java.io.File,1",
    "sm:import:com.jayway.restassured.RestAssured.withArgs,1",
    "sm:import:org.junit.After,1",
    "sm:import:com.jayway.restassured.config.MultiPartConfig.multiPartConfig,1",
    "sm:import:org.apache.commons.io.IOUtils,1",
    "sm:import:java.io.FileOutputStream,1",
    "sm:import:org.springframework.web.context.WebApplicationContext,1",
    "sm:import:org.junit.Test,1",
    "sm:import:com.jayway.restassured.module.mockmvc.RestAssuredMockMvc,1",
    "sm:import:org.junit.Assert.assertThat,1",
    "sm:import:com.jayway.restassured.examples.springmvc.support.Greeting,1",
    "sm:import:com.jayway.restassured.path.json.JsonPath,1",
    "sm:import:com.jayway.restassured.examples.springmvc.config.MainConfiguration,1",
    "sm:import:org.springframework.beans.factory.annotation.Autowired,1",
    "sm:input:`file0`=java.io.File",
    "sm:depth:11",
    "sm:import:org.hamcrest.core.Is.is,1",
    "sm:import:org.junit.runner.RunWith,1"
  ]
],[
  645044,
  "notNull(`x509HostnameVerifier0`, X509HostnameVerifier.class);\n`this.keyStorePassword` = `keyStorePassword0`;\n`this.pathToTrustStore` = `pathToTrustStore0`;\n`this.port` = `port0`;\n",
  1,
  [
    "sm:input:`keyStorePassword0`=java.lang.String",
    "sm:import:com.jayway.restassured.internal.assertion.AssertParameter.notNull,2",
    "sm:import:java.security.KeyManagementException,2",
    "sm:input:`x509HostnameVerifier0`=org.apache.http.conn.ssl.X509HostnameVerifier",
    "sm:input:`this.keystorePassword`=java.lang.String",
    "sm:input:`this.port`=int",
    "sm:input:`pathToTrustStore0`=java.lang.Object",
    "sm:input:`this.pathToTrustStore`=java.lang.Object",
    "sm:order:18",
    "sm:import:java.io.File,2",
    "sm:import:java.security.NoSuchAlgorithmException,2",
    "sm:import:org.apache.http.conn.ssl.SSLSocketFactory,2",
    "sm:hc:4fccc374",
    "sm:import:com.jayway.restassured.internal.util.SafeExceptionRethrower,2",
    "sm:depth:4",
    "sm:import:org.apache.http.conn.ssl.X509HostnameVerifier,2",
    "sm:import:java.security.KeyStore,2",
    "sm:import:java.security.cert.X509Certificate,2",
    "sm:src:/home/alex/bachelor/eval2/repos/jayway/rest-assured/rest-assured/src/main/java/com/jayway/restassured/config/SSLConfig.java",
    "sm:import:java.security.SecureRandom,2",
    "sm:input:`port0`=int",
    "sm:import:org.apache.http.conn.ssl.SSLSocketFactory.STRICT_HOSTNAME_VERIFIER,2",
    "sm:import:javax.net.ssl.X509TrustManager,2",
    "sm:import:org.apache.commons.lang3.Validate,2",
    "sm:import:org.apache.http.conn.ssl.SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER,2",
    "sm:import:javax.net.ssl.SSLContext,2",
    "sm:import:javax.net.ssl.TrustManager,2"
  ]
],[
  185646,
  "StatCounter `summaryStats0` = `rdd0`.stats();\nDouble `stddev0` = Math.sqrt(`summaryStats0`.variance());\n",
  0,
  [
    "sm:input:`rdd0`=org.apache.spark.api.java.JavaDoubleRDD",
    "sm:import:java.util.List,1",
    "sm:order:20",
    "sm:hc:f2f1e176",
    "sm:output:`summaryStats0`=org.apache.spark.util.StatCounter",
    "sm:output:`stddev0`=java.lang.Double",
    "sm:import:org.apache.spark.util.StatCounter,1",
    "sm:import:org.apache.spark.api.java.JavaDoubleRDD,1",
    "sm:import:org.apache.spark.api.java.JavaRDD,1",
    "sm:src:/home/alex/bachelor/eval2/repos/databricks/learning-spark/src/main/java/com/oreilly/learningsparkexamples/java/RemoveOutliers.java",
    "sm:import:org.apache.commons.lang.StringUtils,1",
    "sm:import:org.apache.spark.api.java.JavaSparkContext,1",
    "sm:import:org.apache.spark.api.java.function.Function,1",
    "sm:import:java.util.Arrays,1",
    "sm:depth:7"
  ]
],[
  102999,
  "JavaSparkContext `sc0` = new JavaSparkContext(`master0`, \"StreamingLogInput\");\nJavaDStream<String> `errorLines0` = `lines0`.filter(new Function<String,Boolean>());\n`jssc0`.start();\n`jssc0`.awaitTermination(10000);\n",
  0,
  [
    "sm:import:java.util.List,1",
    "sm:input:`jssc0`=org.apache.spark.streaming.api.java.JavaStreamingContext",
    "sm:import:org.apache.spark.streaming.api.java.JavaDStream,1",
    "sm:src:/home/alex/bachelor/eval2/repos/databricks/learning-spark/src/main/java/com/oreilly/learningsparkexamples/java/StreamingLogInput.java",
    "sm:input:`lines0`=org.apache.spark.streaming.api.java.JavaDStream<java.lang.String>",
    "sm:import:org.apache.spark.api.java.JavaRDD,1",
    "sm:hc:37ac3222",
    "sm:import:org.apache.spark.streaming.api.java.JavaStreamingContext,1",
    "sm:import:org.apache.spark.streaming.Duration,1",
    "sm:import:org.apache.commons.lang.StringUtils,1",
    "sm:output:`sc0`=org.apache.spark.api.java.JavaSparkContext",
    "sm:output:`errorLines0`=org.apache.spark.streaming.api.java.JavaDStream<java.lang.String>",
    "sm:import:org.apache.spark.api.java.JavaSparkContext,1",
    "sm:import:org.apache.spark.api.java.function.Function,1",
    "sm:input:`master0`=java.lang.String",
    "sm:order:29",
    "sm:import:java.util.Arrays,1",
    "sm:depth:7"
  ]
],[
  346803,
  "String `greeting0` = post(`uri0`).andReturn().path(\"greeting\");\nassertThat(`greeting0`, equalTo(\"Greetings John Doe\"));\n",
  0,
  [
    "sm:import:org.hamcrest.Matchers.equalTo,1",
    "sm:import:java.io.StringWriter,1",
    "sm:src:/home/alex/bachelor/eval2/repos/jayway/rest-assured/examples/rest-assured-itest-java/src/test/java/com/jayway/restassured/itest/java/URLITest.java",
    "sm:input:`uri0`=java.net.URI",
    "sm:import:com.jayway.restassured.RestAssured,1",
    "sm:import:com.jayway.restassured.response.Response,1",
    "sm:import:com.jayway.restassured.filter.log.RequestLoggingFilter,1",
    "sm:import:com.jayway.restassured.specification.FilterableResponseSpecification,1",
    "sm:depth:8",
    "sm:import:java.net.URL,1",
    "sm:import:com.jayway.restassured.itest.java.support.RequestPathFromLogExtractor.loggedRequestPathIn,1",
    "sm:import:com.jayway.restassured.http.ContentType.JSON,1",
    "sm:import:com.jayway.restassured.itest.java.support.WithJetty,1",
    "sm:hc:eac1bc91",
    "sm:order:21",
    "sm:import:com.jayway.restassured.specification.FilterableRequestSpecification,1",
    "sm:output:`greeting0`=java.lang.String",
    "sm:import:com.jayway.restassured.filter.Filter,1",
    "sm:import:java.io.PrintStream,1",
    "sm:import:org.apache.commons.io.output.WriterOutputStream,1",
    "sm:import:org.junit.Test,1",
    "sm:import:com.jayway.restassured.builder.ResponseBuilder,1",
    "sm:import:com.jayway.restassured.filter.FilterContext,1",
    "sm:import:org.hamcrest.MatcherAssert.assertThat,1",
    "sm:import:java.net.URI,1"
  ]
],[
  251607,
  "`this.keystoreType` = `keystoreType0`;\n`this.port` = `port0`;\n",
  5,
  [
    "sm:import:javax.net.ssl.SSLContext,4",
    "sm:import:java.security.NoSuchAlgorithmException,4",
    "sm:import:java.security.KeyManagementException,4",
    "sm:import:java.security.cert.X509Certificate,4",
    "sm:import:java.security.SecureRandom,4",
    "sm:hc:91eb301",
    "sm:import:javax.net.ssl.TrustManager,4",
    "sm:import:java.security.KeyStore,6",
    "sm:input:`this.port`=int",
    "sm:import:org.apache.http.conn.ssl.SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER,6",
    "sm:import:java.io.File,4",
    "sm:order:9",
    "sm:import:com.jayway.restassured.internal.assertion.AssertParameter,6",
    "sm:input:`keyStoreType0`=java.lang.String",
    "sm:import:com.jayway.restassured.internal.util.SafeExceptionRethrower,4",
    "sm:import:org.apache.http.conn.ssl.SSLSocketFactory,6",
    "sm:import:org.apache.commons.lang3.Validate,4",
    "sm:depth:4",
    "sm:input:`port0`=int",
    "sm:import:org.apache.http.conn.ssl.X509HostnameVerifier,6",
    "sm:input:`this.keystoreType`=java.lang.String",
    "sm:import:javax.net.ssl.X509TrustManager,4",
    "sm:import:org.apache.http.conn.ssl.SSLSocketFactory.STRICT_HOSTNAME_VERIFIER,6",
    "sm:src:/home/alex/bachelor/eval2/repos/jayway/rest-assured/rest-assured/src/main/java/com/jayway/restassured/authentication/CertificateAuthSettings.java"
  ]
],[
  649382,
  "Date `now0` = new Date();\nif (`config`.getApplicationSettings().getHeavyLoad() && `user0`.shouldRefreshFeedsAt(`now0`)) {\n    `feedSubscriptionService`.refreshAll(`user0`);\n    `saveUser0` = true;\n}\n",
  0,
  [
    "sm:order:30",
    "sm:input:`feedSubscriptionService`=com.commafeed.backend.service.FeedSubscriptionService",
    "sm:import:com.commafeed.backend.dao.UserDAO,1",
    "sm:input:`user0`=com.commafeed.backend.model.User",
    "sm:import:java.util.Date,1",
    "sm:hc:600f424d",
    "sm:input:`config`=com.commafeed.CommaFeedConfiguration",
    "sm:import:com.commafeed.CommaFeedConfiguration,1",
    "sm:import:org.apache.commons.lang3.time.DateUtils,1",
    "sm:import:com.commafeed.backend.model.User,1",
    "sm:import:lombok.RequiredArgsConstructor,1",
    "sm:import:javax.inject.Inject,1",
    "sm:output:`now0`=java.util.Date",
    "sm:input:`saveUser0`=boolean",
    "sm:src:/home/alex/bachelor/eval2/repos/Athou/commafeed/src/main/java/com/commafeed/backend/service/internal/PostLoginActivities.java",
    "sm:import:javax.inject.Singleton,1",
    "sm:import:com.commafeed.backend.service.FeedSubscriptionService,1",
    "sm:depth:7"
  ]
],[
  614470,
  "PairFunction<String,String,String> `keyData0` = new PairFunction<String,String,String>();\nJavaPairRDD<String,String> `result0` = `rdd0`.filter(`longWordFilter0`);\nMap<String,String> `resultMap0` = `result0`.collectAsMap();\n",
  0,
  [
    "sm:import:java.util.Map,1",
    "sm:import:java.util.List,1",
    "sm:depth:6",
    "sm:output:`result0`=org.apache.spark.api.java.JavaPairRDD<java.lang.String,java.lang.String>",
    "sm:import:scala.Tuple2,1",
    "sm:import:org.apache.spark.api.java.JavaRDD,1",
    "sm:import:java.util.Map.Entry,1",
    "sm:order:25",
    "sm:import:org.apache.spark.api.java.function.PairFunction,1",
    "sm:import:org.apache.commons.lang.StringUtils,1",
    "sm:input:`rdd0`=org.apache.spark.api.java.JavaPairRDD<java.lang.String,java.lang.String>",
    "sm:import:java.util.ArrayList,1",
    "sm:output:`resultMap0`=java.util.Map<java.lang.String,java.lang.String>",
    "sm:src:/home/alex/bachelor/eval2/repos/databricks/learning-spark/src/main/java/com/oreilly/learningsparkexamples/java/KeyValueMapFilter.java",
    "sm:input:`longWordFilter0`=org.apache.spark.api.java.function.Function<scala.Tuple2<java.lang.String,java.lang.String>,java.lang.Boolean>",
    "sm:hc:a6df271e",
    "sm:import:org.apache.spark.api.java.JavaSparkContext,1",
    "sm:import:org.apache.spark.api.java.JavaPairRDD,1",
    "sm:import:org.apache.spark.api.java.function.Function,1",
    "sm:import:java.util.Arrays,1",
    "sm:output:`keyData0`=org.apache.spark.api.java.function.PairFunction<java.lang.String,java.lang.String,java.lang.String>"
  ]
],[
  599614,
  "super(`who0`);\nValidate.isTrue(`slot0` >= 0 && `slot0` <= 8, \"Slot must be in range 0-8 inclusive\");\nValidate.notNull(`previousBookMeta0`, \"Previous book meta must not be null\");\n`this.cancel` = false;\n",
  0,
  [
    "sm:input:`slot0`=int",
    "sm:import:org.apache.commons.lang.Validate,1",
    "sm:depth:6",
    "sm:import:org.bukkit.event.Cancellable,1",
    "sm:hc:141b01c3",
    "sm:input:`this.cancel`=boolean",
    "sm:import:org.bukkit.Bukkit,1",
    "sm:input:`who0`=org.bukkit.entity.Player",
    "sm:import:org.bukkit.entity.Player,1",
    "sm:import:org.bukkit.inventory.meta.BookMeta,1",
    "sm:input:`previousBookMeta0`=org.bukkit.inventory.meta.BookMeta",
    "sm:import:org.bukkit.event.HandlerList,1",
    "sm:src:/home/alex/bachelor/eval2/repos/Bukkit/Bukkit/src/main/java/org/bukkit/event/player/PlayerEditBookEvent.java",
    "sm:order:27"
  ]
],[
  431763,
  "MockWebServer `server0` = new MockWebServer();\n`server0`.enqueue(new MockResponse().setResponseCode(200).setBody(`schema0`));\n",
  1,
  [
    "sm:hc:7902838a",
    "sm:order:20",
    "sm:output:`server0`=com.squareup.okhttp.mockwebserver.MockWebServer",
    "sm:import:com.jayway.restassured.module.jsv.JsonSchemaValidatorSettings.settings,2",
    "sm:import:com.jayway.restassured.module.jsv.JsonSchemaValidator,2",
    "sm:import:com.jayway.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchema,2",
    "sm:import:com.jayway.restassured.itest.java.support.WithJetty,2",
    "sm:input:`schema0`=java.lang.String",
    "sm:import:java.net.URI,2",
    "sm:import:com.github.fge.jsonschema.SchemaVersion.DRAFTV3,2",
    "sm:import:com.github.fge.jsonschema.SchemaVersion.DRAFTV4,2",
    "sm:import:com.jayway.restassured.RestAssured,2",
    "sm:import:com.github.fge.jsonschema.main.JsonSchemaFactory,2",
    "sm:import:org.hamcrest.Matchers,2",
    "sm:import:com.squareup.okhttp.mockwebserver.MockResponse,2",
    "sm:import:org.junit.Test,2",
    "sm:import:java.io.InputStream,2",
    "sm:import:com.github.fge.jsonschema.cfg.ValidationConfiguration,2",
    "sm:src:/home/alex/bachelor/eval2/repos/jayway/rest-assured/examples/rest-assured-itest-java/src/test/java/com/jayway/restassured/itest/java/JsonSchemaValidationITest.java",
    "sm:import:com.jayway.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchemaInClasspath,2",
    "sm:import:com.squareup.okhttp.mockwebserver.MockWebServer,2",
    "sm:import:org.apache.commons.io.IOUtils,2",
    "sm:import:java.io.IOException,2",
    "sm:depth:7"
  ]
],[
  81519,
  "Map<String,String> `typeNameMap0` = TypeNameValue.extractMap(`result0`.getTypeName());\nif (`effectiveClassname0` == null) `Placeholder`\n",
  0,
  [
    "sm:import:com.googlecode.jmxtrans.model.Result,1",
    "sm:import:org.slf4j.LoggerFactory,1",
    "sm:import:lombok.EqualsAndHashCode,1",
    "sm:import:org.apache.commons.jexl2.Expression,1",
    "sm:import:com.googlecode.jmxtrans.model.naming.typename.TypeNameValue,1",
    "sm:import:org.apache.commons.jexl2.MapContext,1",
    "sm:src:/home/alex/bachelor/eval2/repos/jmxtrans/jmxtrans/jmxtrans-core/src/main/java/com/googlecode/jmxtrans/model/naming/JexlNamingStrategy.java",
    "sm:input:`effectiveClassname0`=java.lang.String",
    "sm:import:org.apache.commons.jexl2.JexlContext,1",
    "sm:order:17",
    "sm:import:org.apache.commons.jexl2.JexlEngine,1",
    "sm:depth:7",
    "sm:import:com.googlecode.jmxtrans.model.NamingStrategy,1",
    "sm:output:`typeNameMap0`=java.util.Map<java.lang.String,java.lang.String>",
    "sm:import:org.apache.commons.jexl2.JexlException,1",
    "sm:import:org.slf4j.Logger,1",
    "sm:hc:19a735c2",
    "sm:input:`result0`=com.googlecode.jmxtrans.model.Result",
    "sm:import:java.util.Map,1"
  ]
],[
  519596,
  "String `metricName0` = `this.metricNameStrategy`.formatName(`result0`);\nif (isNumeric(`value0`)) {\n    StringBuilder `resultString0` = new StringBuilder();\n    `addTags`(`resultString0`);\n    if (!`typeNames`.isEmpty()) `Placeholder`\n    `resultStrings0`.add(`resultString0`.toString());\n} else `Placeholder`\n",
  0,
  [
    "sm:import:javax.annotation.Nullable,1",
    "sm:import:lombok.ToString,1",
    "sm:import:com.google.common.collect.ImmutableList,1",
    "sm:input:`addTags`=void(java.lang.StringBuilder)",
    "sm:hc:21e5b633",
    "sm:input:`value0`=java.lang.Object",
    "sm:import:java.util.Map,1",
    "sm:depth:9",
    "sm:output:`metricName0`=java.lang.String",
    "sm:input:`resultStrings0`=java.util.List<java.lang.String>",
    "sm:import:com.googlecode.jmxtrans.model.naming.ClassAttributeNamingStrategy,1",
    "sm:src:/home/alex/bachelor/eval2/repos/jmxtrans/jmxtrans/jmxtrans-output/jmxtrans-output-core/src/main/java/com/googlecode/jmxtrans/model/output/support/opentsdb/OpenTSDBMessageFormatter.java",
    "sm:import:com.googlecode.jmxtrans.model.naming.JexlNamingStrategy,1",
    "sm:import:com.googlecode.jmxtrans.model.naming.typename.TypeNameValuesStringBuilder,1",
    "sm:import:org.apache.commons.jexl2.JexlException,1",
    "sm:import:java.util.LinkedList,1",
    "sm:import:org.slf4j.LoggerFactory,1",
    "sm:import:com.googlecode.jmxtrans.model.naming.typename.TypeNameValue,1",
    "sm:import:com.googlecode.jmxtrans.model.NamingStrategy,1",
    "sm:input:`typeNames`=com.google.common.collect.ImmutableList<java.lang.String>",
    "sm:import:org.apache.commons.lang.StringUtils,1",
    "sm:order:41",
    "sm:import:com.googlecode.jmxtrans.util.NumberUtils.isNumeric,1",
    "sm:import:org.slf4j.Logger,1",
    "sm:import:com.google.common.collect.ImmutableMap,1",
    "sm:import:java.util.List,1",
    "sm:import:com.googlecode.jmxtrans.model.Result,1",
    "sm:import:lombok.EqualsAndHashCode,1",
    "sm:import:javax.annotation.Nonnull,1",
    "sm:import:java.net.UnknownHostException,1",
    "sm:input:`this.metricNameStrategy`=com.googlecode.jmxtrans.model.NamingStrategy",
    "sm:import:com.google.common.base.Function,1",
    "sm:import:com.googlecode.jmxtrans.exceptions.LifecycleException,1",
    "sm:import:com.google.common.collect.FluentIterable.from,1",
    "sm:input:`result0`=com.googlecode.jmxtrans.model.Result"
  ]
],[
  495918,
  "JmxTransConfiguration `configuration0` = `parseConfiguration`(`requiredOptionsAnd`(\"-c\", \"true\"));\n`configuration0` = `parseConfiguration`(`requiredOptionsAnd`(\"-c\", \"false\"));\nassertThat(`configuration0`.isContinueOnJsonError(), is(false));\n",
  0,
  [
    "sm:import:java.io.IOException,1",
    "sm:import:org.junit.Rule,1",
    "sm:src:/home/alex/bachelor/eval2/repos/jmxtrans/jmxtrans/jmxtrans-core/src/test/java/com/googlecode/jmxtrans/cli/CliArgumentParserBase.java",
    "sm:input:`parseConfiguration`=com.googlecode.jmxtrans.cli.JmxTransConfiguration(java.lang.String[])",
    "sm:output:`configuration0`=com.googlecode.jmxtrans.cli.JmxTransConfiguration",
    "sm:import:com.kaching.platform.testing.AllowLocalFileAccess,1",
    "sm:import:org.junit.rules.TemporaryFolder,1",
    "sm:order:30",
    "sm:import:org.hamcrest.Matchers.startsWith,1",
    "sm:import:org.junit.Before,1",
    "sm:hc:b81f119",
    "sm:import:java.io.File,1",
    "sm:import:org.apache.commons.cli.ParseException,1",
    "sm:input:`requiredOptionsAnd`=java.lang.String[](java.lang.String[])",
    "sm:import:java.util.ArrayList,1",
    "sm:import:org.junit.Test,1",
    "sm:import:java.util.List,1",
    "sm:import:org.hamcrest.Matchers.is,1",
    "sm:import:java.util.Arrays.asList,1",
    "sm:import:org.junit.Ignore,1",
    "sm:import:org.hamcrest.MatcherAssert.assertThat,1",
    "sm:depth:7"
  ]
],[
  239264,
  "if (`name0` == null) `Placeholder`\nif (!`allowDottedKeys0`) `Placeholder`\n`clean0` = `org.apache.commons.lang.StringUtils`.chomp(`clean0`, \"_\");\n",
  0,
  [
    "sm:src:/home/alex/bachelor/eval2/repos/jmxtrans/jmxtrans/jmxtrans-core/src/main/java/com/googlecode/jmxtrans/model/naming/StringUtils.java",
    "sm:depth:5",
    "sm:import:java.util.regex.Pattern,1",
    "sm:input:`org.apache.commons.lang.StringUtils`=org.apache.commons.lang.StringUtils",
    "sm:input:`clean0`=java.lang.String",
    "sm:input:`name0`=java.lang.String",
    "sm:hc:2f41f041",
    "sm:order:18",
    "sm:input:`allowDottedKeys0`=boolean"
  ]
],[
  450237,
  "SparkConf `conf0` = new SparkConf().setAppName(\"wordCount\");\nJavaSparkContext `sc0` = new JavaSparkContext(`conf0`);\nJavaRDD<String> `input0` = `sc0`.textFile(`inputFile0`);\n",
  0,
  [
    "sm:import:java.util.List,1",
    "sm:src:/home/alex/bachelor/eval2/repos/databricks/learning-spark/mini-complete-example/src/main/java/com/oreilly/learningsparkexamples/mini/java/WordCount.java",
    "sm:import:java.lang.Iterable,1",
    "sm:hc:bfa9849",
    "sm:import:org.apache.spark.api.java.function.Function2,1",
    "sm:import:org.apache.spark.api.java.JavaRDD,1",
    "sm:import:org.apache.spark.api.java.function.PairFunction,1",
    "sm:import:org.apache.spark.SparkConf,1",
    "sm:import:org.apache.spark.api.java.function.FlatMapFunction,1",
    "sm:import:org.apache.commons.lang.StringUtils,1",
    "sm:output:`sc0`=org.apache.spark.api.java.JavaSparkContext",
    "sm:order:28",
    "sm:input:`inputFile0`=java.lang.String",
    "sm:import:org.apache.spark.api.java.JavaSparkContext,1",
    "sm:import:scala.Tuple2,1",
    "sm:output:`input0`=org.apache.spark.api.java.JavaRDD<java.lang.String>",
    "sm:output:`conf0`=org.apache.spark.SparkConf",
    "sm:import:org.apache.spark.api.java.JavaPairRDD,1",
    "sm:import:java.util.Arrays,1",
    "sm:depth:7"
  ]
],[
  634628,
  "`THE_INSTANCE.logsDirectory` = `cl0`.getOptionValue(`LogAnalyzerAppMain.LOGS_DIRECTORY`, \"/tmp/logs\");\n`THE_INSTANCE.checkpointDirectory` = `cl0`.getOptionValue(`LogAnalyzerAppMain.CHECKPOINT_DIRECTORY`, \"/tmp/log-analyzer-streaming\");\n`THE_INSTANCE.initialized` = true;\n",
  0,
  [
    "sm:depth:5",
    "sm:input:`THE_INSTANCE.checkpointDirectory`=java.lang.String",
    "sm:import:org.apache.commons.cli,1",
    "sm:src:/home/alex/bachelor/eval2/repos/databricks/learning-spark/src/main/java/com/oreilly/learningsparkexamples/java/logs/Flags.java",
    "sm:order:21",
    "sm:input:`LogAnalyzerAppMain.LOGS_DIRECTORY`=java.lang.String",
    "sm:input:`THE_INSTANCE.initialized`=boolean",
    "sm:input:`LogAnalyzerAppMain.CHECKPOINT_DIRECTORY`=java.lang.String",
    "sm:import:org.apache.spark.streaming.Duration,1",
    "sm:input:`cl0`=org.apache.commons.cli.CommandLine",
    "sm:input:`THE_INSTANCE.logsDirectory`=java.lang.String",
    "sm:hc:9c22fba"
  ]
],[
  654885,
  "if (`socket0` == null) {\n    `log`.error(\"Socket is null [{}]\", `address0`);\n    return false;\n}\nif (!`socket0`.isBound()) `Placeholder`\nif (`socket0`.isClosed()) `Placeholder`\nif (`socket0`.isOutputShutdown()) `Placeholder`\nreturn true;\n",
  0,
  [
    "sm:import:org.slf4j.Logger,1",
    "sm:import:java.net.Socket,1",
    "sm:import:org.slf4j.LoggerFactory,1",
    "sm:hc:b5800d9b",
    "sm:input:`socket0`=java.net.Socket",
    "sm:order:33",
    "sm:input:`address0`=java.net.InetSocketAddress",
    "sm:input:`LOG`=org.slf4j.Logger",
    "sm:src:/home/alex/bachelor/eval2/repos/jmxtrans/jmxtrans/jmxtrans-core/src/main/java/com/googlecode/jmxtrans/connections/SocketFactory.java",
    "sm:import:java.net.InetSocketAddress,1",
    "sm:import:org.apache.commons.pool.BaseKeyedPoolableObjectFactory,1",
    "sm:depth:7"
  ]
],[
  341664,
  "EmbeddedAmbroseHiveProgressReporter `reporter0` = getEmbeddedProgressReporter();\nfor(TaskRunner `taskRunner0` : `completeTaskList0`) {\n    TaskResult `taskResult0` = (TaskResult) `_taskResultField0`.get(`taskRunner0`);\n    if (!`taskResult0`.isRunning() && `taskResult0`.getExitVal() != 0) `Placeholder`\n}\nString `sleepTime0` = System.getProperty(`POST_SCRIPT_SLEEP_SECS_PARAM`, \"10\");\n",
  0,
  [
    "sm:import:org.apache.hadoop.hive.ql.hooks.ExecuteWithHookContext,1",
    "sm:import:org.apache.commons.logging.LogFactory,1",
    "sm:import:com.twitter.ambrose.hive.reporter.AmbroseHiveReporterFactory.getEmbeddedProgressReporter,1",
    "sm:import:java.lang.reflect.Field,1",
    "sm:import:org.apache.hadoop.hive.ql.exec.TaskRunner,1",
    "sm:input:`POST_SCRIPT_SLEEP_SECS_PARAM`=java.lang.String",
    "sm:import:com.twitter.ambrose.model.hadoop.MapReduceJobState,1",
    "sm:import:com.twitter.ambrose.hive.reporter.EmbeddedAmbroseHiveProgressReporter,1",
    "sm:import:org.apache.hadoop.hive.ql.exec.TaskResult,1",
    "sm:import:org.apache.commons.logging.Log,1",
    "sm:output:`sleepTime0`=java.lang.String",
    "sm:input:`completeTaskList0`=java.util.List<org.apache.hadoop.hive.ql.exec.TaskRunner>",
    "sm:hc:2ea4830b",
    "sm:import:org.apache.hadoop.hive.conf.HiveConf,1",
    "sm:src:/home/alex/bachelor/eval2/repos/twitter/ambrose/hive/src/main/java/com/twitter/ambrose/hive/AmbroseHiveFailHook.java",
    "sm:depth:10",
    "sm:import:java.util.Properties,1",
    "sm:import:com.twitter.ambrose.model.Job,1",
    "sm:order:49",
    "sm:import:org.apache.hadoop.hive.ql.exec.Task,1",
    "sm:import:java.util.List,1",
    "sm:input:`_taskResultField0`=java.lang.reflect.Field",
    "sm:import:com.twitter.ambrose.model.DAGNode,1",
    "sm:import:java.io.Serializable,1",
    "sm:import:org.apache.hadoop.hive.ql.hooks.HookContext,1",
    "sm:output:`reporter0`=com.twitter.ambrose.hive.reporter.EmbeddedAmbroseHiveProgressReporter",
    "sm:import:com.twitter.ambrose.model.Event,1"
  ]
],[
  552736,
  "Cookies `cookies0` = given().spec(`reqSpec10`).when().get(\"/reflect\").then().extract().detailedCookies();\nassertThat(`cookies0`.hasCookieWithName(\"Cookie1\"), is(true));\nassertThat(`cookies0`.hasCookieWithName(\"Cookie2\"), is(true));\nassertThat(`cookies0`.hasCookieWithName(\"Cookie1\"), is(true));\n",
  0,
  [
    "sm:import:com.jayway.restassured.config.LogConfig.logConfig,1",
    "sm:import:org.hamcrest.Matchers,1",
    "sm:import:com.jayway.restassured.specification.ResponseSpecification,1",
    "sm:import:java.io.StringWriter,1",
    "sm:import:com.jayway.restassured.builder.ResponseSpecBuilder,1",
    "sm:import:com.jayway.restassured.RestAssured,1",
    "sm:import:com.jayway.restassured.response.Cookies,1",
    "sm:src:/home/alex/bachelor/eval2/repos/jayway/rest-assured/examples/rest-assured-itest-java/src/test/java/com/jayway/restassured/itest/java/SpecificationBuilderITest.java",
    "sm:import:com.jayway.restassured.itest.java.support.WithJetty,1",
    "sm:import:com.jayway.restassured.filter.log.LogDetail.ALL,1",
    "sm:import:com.jayway.restassured.config.RestAssuredConfig.newConfig,1",
    "sm:import:com.jayway.restassured.specification.RequestSpecification,1",
    "sm:import:com.jayway.restassured.builder.RequestSpecBuilder,1",
    "sm:output:`cookies0`=com.jayway.restassured.response.Cookies",
    "sm:hc:e4fc98ea",
    "sm:import:java.io.PrintStream,1",
    "sm:depth:12",
    "sm:import:org.apache.commons.io.output.WriterOutputStream,1",
    "sm:import:org.junit.Test,1",
    "sm:import:org.junit.Assert.assertThat,1",
    "sm:import:com.jayway.restassured.config.RedirectConfig.redirectConfig,1",
    "sm:input:`reqSpec10`=com.jayway.restassured.specification.RequestSpecification",
    "sm:order:52",
    "sm:import:java.util.Arrays.asList,1"
  ]
],[
  521355,
  "`LOG`.info(String.format(\"Loading RunningJob configuration file '%s'\", `jobFile0`));\nPath `path0` = new Path(`jobFile0`);\nConfiguration `conf0` = new Configuration(false);\n",
  0,
  [
    "sm:input:`log`=org.apache.commons.logging.Log",
    "sm:import:org.apache.commons.logging.LogFactory,1",
    "sm:depth:6",
    "sm:import:org.apache.commons.logging.Log,1",
    "sm:import:org.apache.hadoop.fs.Path,1",
    "sm:order:26",
    "sm:import:java.io.InputStream,1",
    "sm:src:/home/alex/bachelor/eval2/repos/twitter/ambrose/common/src/main/java/com/twitter/ambrose/model/hadoop/MapReduceHelper.java",
    "sm:import:org.apache.hadoop.mapred.JobID,1",
    "sm:import:java.util.Properties,1",
    "sm:import:com.google.common.base.Preconditions.checkNotNull,1",
    "sm:import:org.apache.hadoop.fs.FileSystem,1",
    "sm:import:org.apache.hadoop.mapred.RunningJob,1",
    "sm:import:org.apache.hadoop.mapred.TaskReport,1",
    "sm:output:`path0`=org.apache.hadoop.fs.Path",
    "sm:import:org.apache.hadoop.mapred.JobClient,1",
    "sm:input:`jobFile0`=java.lang.String",
    "sm:import:org.apache.hadoop.conf.Configuration,1",
    "sm:hc:2d67f67e",
    "sm:output:`conf0`=org.apache.hadoop.conf.Configuration",
    "sm:import:java.util.Map,1"
  ]
],[
  377883,
  "super(\"save-off\");\n`this.usageMessage` = \"/save-off\";\n`setPermission`(\"bukkit.command.save.disable\");\n",
  0,
  [
    "sm:import:java.util.List,1",
    "sm:import:org.apache.commons.lang.Validate,1",
    "sm:import:org.bukkit.command.Command,1",
    "sm:input:`this.usageMessage`=java.lang.String",
    "sm:order:13",
    "sm:input:`setPermission`=void(java.lang.String)",
    "sm:depth:4",
    "sm:import:org.bukkit.Bukkit,1",
    "sm:import:org.bukkit.World,1",
    "sm:hc:67b59d8e",
    "sm:import:com.google.common.collect.ImmutableList,1",
    "sm:src:/home/alex/bachelor/eval2/repos/Bukkit/Bukkit/src/main/java/org/bukkit/command/defaults/SaveOffCommand.java",
    "sm:import:org.bukkit.command.CommandSender,1"
  ]
],[
  474630,
  "ConfigurationSerializable `result0` = null;\nMethod `method0` = null;\nif (`result0` == null) {\n    `method0` = `getMethod`(\"deserialize\", true);\n    if (`method0` != null) `Placeholder`\n}\n",
  0,
  [
    "sm:import:java.util.HashMap,1",
    "sm:import:org.apache.commons.lang.Validate,1",
    "sm:import:org.bukkit.FireworkEffect,1",
    "sm:import:java.lang.reflect.Method,1",
    "sm:import:java.util.logging.Logger,1",
    "sm:hc:6e7e60f5",
    "sm:order:31",
    "sm:import:org.bukkit.inventory.ItemStack,1",
    "sm:import:org.bukkit.util.BlockVector,1",
    "sm:import:java.util.Map,1",
    "sm:depth:8",
    "sm:import:java.lang.reflect.InvocationTargetException,1",
    "sm:import:org.bukkit.Color,1",
    "sm:import:org.bukkit.util.Vector,1",
    "sm:import:java.util.logging.Level,1",
    "sm:output:`method0`=java.lang.reflect.Method",
    "sm:import:org.bukkit.potion.PotionEffect,1",
    "sm:import:java.lang.reflect.Constructor,1",
    "sm:output:`result0`=org.bukkit.configuration.serialization.ConfigurationSerializable",
    "sm:src:/home/alex/bachelor/eval2/repos/Bukkit/Bukkit/src/main/java/org/bukkit/configuration/serialization/ConfigurationSerialization.java",
    "sm:import:org.bukkit.configuration.Configuration,1",
    "sm:input:`getMethod`=java.lang.reflect.Method(java.lang.String,boolean)",
    "sm:import:java.lang.reflect.Modifier,1"
  ]
],[
  174767,
  "return `byId`[`id0`];",
  0,
  [
    "sm:order:4",
    "sm:import:java.util.HashMap,1",
    "sm:import:org.apache.commons.lang.Validate,1",
    "sm:input:`id0`=int",
    "sm:src:/home/alex/bachelor/eval2/repos/Bukkit/Bukkit/src/main/java/org/bukkit/potion/PotionEffectType.java",
    "sm:hc:c8519086",
    "sm:depth:3",
    "sm:input:`byId`=org.bukkit.potion.PotionEffectType[]",
    "sm:import:java.util.Map,1"
  ]
],[
  546356,
  "try {\n    assertThat(`greeting0`.getFirstName(), equalTo(\"John\"));\n    assertThat(`greeting0`.getLastName(), equalTo(\"Doe\"));\n} finally {\n    JsonPath.reset();\n}",
  0,
  [
    "sm:import:java.util.List,1",
    "sm:import:org.hamcrest.Matchers,1",
    "sm:import:com.jayway.restassured.path.json.config.JsonPathConfig,1",
    "sm:order:27",
    "sm:import:org.apache.commons.lang3.StringUtils,1",
    "sm:import:com.jayway.restassured.path.json.support.Winner,1",
    "sm:import:com.jayway.restassured.mapper.ObjectDeserializationContext,1",
    "sm:import:com.jayway.restassured.path.json.JsonPath.from,1",
    "sm:src:/home/alex/bachelor/eval2/repos/jayway/rest-assured/json-path/src/test/java/com/jayway/restassured/path/json/JsonPathObjectDeserializationTest.java",
    "sm:input:`greeting0`=com.jayway.restassured.path.json.support.Greeting",
    "sm:hc:d0460ec0",
    "sm:import:com.jayway.restassured.path.json.mapping.JsonPathObjectDeserializer,1",
    "sm:import:org.junit.Assert.assertThat,1",
    "sm:import:org.junit.Test,1",
    "sm:import:java.util.concurrent.atomic.AtomicBoolean,1",
    "sm:import:com.jayway.restassured.path.json.support.Greeting,1",
    "sm:depth:7"
  ]
],[
  646505,
  "String `algorithm0` = \"PBKDF2WithHmacSHA1\";\ntry {\n    SecretKeyFactory `f0` = SecretKeyFactory.getInstance(`algorithm0`);\n    `bytes0` = `key0`.getEncoded();\n}catch (Exception `e0`) {\n    log.error(`e0`.getMessage(), `e0`);\n}\nreturn `bytes0`;\n",
  0,
  [
    "sm:import:java.security.SecureRandom,1",
    "sm:src:/home/alex/bachelor/eval2/repos/Athou/commafeed/src/main/java/com/commafeed/backend/service/PasswordEncryptionService.java",
    "sm:import:java.security.spec.KeySpec,1",
    "sm:import:lombok.extern.slf4j.Slf4j,1",
    "sm:import:org.apache.commons.lang3.StringUtils,1",
    "sm:depth:9",
    "sm:input:`bytes0`=byte[]",
    "sm:order:42",
    "sm:input:`key0`=javax.crypto.SecretKey",
    "sm:import:java.io.Serializable,1",
    "sm:import:lombok.RequiredArgsConstructor,1",
    "sm:import:javax.crypto.spec.PBEKeySpec,1",
    "sm:import:javax.crypto.SecretKeyFactory,1",
    "sm:import:javax.crypto.SecretKey,1",
    "sm:import:javax.inject.Inject,1",
    "sm:output:`algorithm0`=java.lang.String",
    "sm:import:javax.inject.Singleton,1",
    "sm:import:java.security.NoSuchAlgorithmException,1",
    "sm:import:java.security.MessageDigest,1",
    "sm:hc:6af48231"
  ]
],[
  142967,
  "Validate.notNull(`owningPlugin0`, \"Plugin cannot be null\");\nMap<Plugin,MetadataValue> `entry0` = `metadataMap`.get(`key0`);\nif (`entry0` == null) `Placeholder`\n`entry0`.remove(`owningPlugin0`);\n",
  0,
  [
    "sm:src:/home/alex/bachelor/eval2/repos/Bukkit/Bukkit/src/main/java/org/bukkit/metadata/MetadataStoreBase.java",
    "sm:input:`key0`=java.lang.String",
    "sm:import:org.apache.commons.lang.Validate,1",
    "sm:depth:6",
    "sm:import:org.bukkit.plugin.Plugin,1",
    "sm:input:`metadataMap`=java.util.Map<java.lang.String,java.util.Map<org.bukkit.plugin.Plugin,org.bukkit.metadata.MetadataValue>>",
    "sm:order:26",
    "sm:import:java.util,1",
    "sm:hc:fbf09a88",
    "sm:input:`owningPlugin0`=org.bukkit.plugin.Plugin",
    "sm:output:`entry0`=java.util.Map<org.bukkit.plugin.Plugin,org.bukkit.metadata.MetadataValue>"
  ]
],[
  426142,
  "XOAuthConsumer `consumer0` = new XOAuthConsumer(\"username\");\nassertThat(`provider0`.getRequestTokenEndpointUrl()).isEqualTo(\"https://www.google.com/accounts/OAuthGetRequestToken?scope=https%3A%2F%2Fmail.google.com%2F+https%3A%2F%2Fwww.google.com%2Fm8%2Ffeeds%2F&xoauth_displayname=SMS+Backup%2B\");\n",
  0,
  [
    "sm:output:`consumer0`=com.zegoggles.smssync.auth.XOAuthConsumer",
    "sm:depth:6",
    "sm:src:/home/alex/bachelor/eval2/repos/jberkel/sms-backup-plus/src/test/java/com/zegoggles/smssync/auth/XOAuthConsumerTest.java",
    "sm:hc:7ac787c6",
    "sm:import:oauth.signpost.commonshttp.CommonsHttpOAuthProvider,1",
    "sm:input:`provider0`=oauth.signpost.commonshttp.CommonsHttpOAuthProvider",
    "sm:import:org.robolectric.Robolectric,1",
    "sm:import:org.robolectric.RobolectricTestRunner,1",
    "sm:import:org.fest.assertions.api.Assertions.assertThat,1",
    "sm:order:18",
    "sm:import:com.zegoggles.smssync.TestHelper.getResource,1",
    "sm:import:org.junit.Test,1",
    "sm:import:org.junit.runner.RunWith,1"
  ]
],[
  503160,
  "if (`value0` instanceof Number) `Placeholder`\nif (`value0` instanceof String) {\n    String `stringValue0` = (String) `value0`;\n    if (isNullOrEmpty(`stringValue0`)) return true;\n}\n",
  0,
  [
    "sm:hc:c43f2dbf",
    "sm:depth:9",
    "sm:src:/home/alex/bachelor/eval2/repos/jmxtrans/jmxtrans/jmxtrans-utils/src/main/java/com/googlecode/jmxtrans/util/NumberUtils.java",
    "sm:order:26",
    "sm:import:org.apache.commons.lang.math.NumberUtils.isNumber,1",
    "sm:input:`value0`=java.lang.Object",
    "sm:import:com.google.common.base.Strings.isNullOrEmpty,1"
  ]
],[
  328441,
  "if (`args.length` > 0) `Placeholder` else `Placeholder`\nJavaRDD<Integer> `rdd0` = `sc0`.parallelize(Arrays.asList(1, 2, 3, 4));\n`System.out`.println(StringUtils.join(`result0`.collect(), \",\"));\n",
  1,
  [
    "sm:import:java.util.Arrays,2",
    "sm:src:/home/alex/bachelor/eval2/repos/databricks/learning-spark/src/main/java/com/oreilly/learningsparkexamples/java/BasicMap.java",
    "sm:input:`sc0`=org.apache.spark.api.java.JavaSparkContext",
    "sm:import:java.util.List,2",
    "sm:hc:27e67cdd",
    "sm:import:org.apache.spark.api.java.function.Function,2",
    "sm:output:`rdd0`=org.apache.spark.api.java.JavaRDD<java.lang.Integer>",
    "sm:input:`System.out`=java.io.PrintStream",
    "sm:input:`result0`=org.apache.spark.api.java.JavaRDD<java.lang.Integer>",
    "sm:import:org.apache.spark.api.java.JavaRDD,2",
    "sm:import:org.apache.commons.lang.StringUtils,2",
    "sm:order:33",
    "sm:import:org.apache.spark.api.java.JavaSparkContext,2",
    "sm:input:`args.length`=int",
    "sm:depth:7"
  ]
],[
  533183,
  "Mac `mac0` = Mac.getInstance(\"HmacSHA1\");\nint `offset0` = `hash0`[`hash.length` - 1] & 0xF;\nfor(int `i0` = 0; `i0` < 4; ++`i0`) {\n    `calculated0` <<= 8;\n    `calculated0` |= (`hash0`[`offset0` + `i0`] & 0xFF);\n}\n`calculated0` &= 0x7FFFFFFF;\n",
  0,
  [
    "sm:import:java.security.SecureRandom,1",
    "sm:import:org.apache.commons.codec.binary.Base32,1",
    "sm:import:org.slf4j.LoggerFactory,1",
    "sm:input:`calculated0`=long",
    "sm:input:`hash0`=byte[]",
    "sm:output:`offset0`=int",
    "sm:hc:93bd1836",
    "sm:import:java.util.Date,1",
    "sm:import:java.util.concurrent.TimeUnit,1",
    "sm:import:javax.crypto.Mac,1",
    "sm:depth:11",
    "sm:import:javax.crypto.spec.SecretKeySpec,1",
    "sm:order:54",
    "sm:import:java.nio.ByteBuffer,1",
    "sm:input:`hash.length`=int",
    "sm:import:org.slf4j.Logger,1",
    "sm:output:`mac0`=javax.crypto.Mac",
    "sm:import:java.util.Arrays,1",
    "sm:src:/home/alex/bachelor/eval2/repos/skavanagh/KeyBox/src/main/java/com/keybox/manage/util/OTPUtil.java"
  ]
],[
  14926,
  "if (StringUtils.isNotEmpty(`sessionOutput0`.getOutput())) {\n    `outputList0`.add(`sessionOutput0`);\n    `userSessionsOutput0`.getSessionOutputMap().put(`key0`, new SessionOutput(`sessionId0`, `sessionOutput0`));\n}",
  0,
  [
    "sm:input:`sessionId0`=java.lang.Long",
    "sm:import:com.keybox.manage.db.SessionAuditDB,1",
    "sm:src:/home/alex/bachelor/eval2/repos/skavanagh/KeyBox/src/main/java/com/keybox/manage/util/SessionOutputUtil.java",
    "sm:import:org.apache.commons.lang3.StringUtils,1",
    "sm:input:`sessionOutput0`=com.keybox.manage.model.SessionOutput",
    "sm:import:com.google.gson.GsonBuilder,1",
    "sm:input:`key0`=java.lang.Integer",
    "sm:import:org.slf4j.LoggerFactory,1",
    "sm:import:com.keybox.manage.model.UserSessionsOutput,1",
    "sm:hc:7aa5e5b1",
    "sm:import:com.keybox.manage.model.User,1",
    "sm:import:com.google.gson.Gson,1",
    "sm:import:java.sql.Connection,1",
    "sm:import:com.keybox.manage.model.SessionOutput,1",
    "sm:input:`outputList0`=java.util.List<com.keybox.manage.model.SessionOutput>",
    "sm:order:25",
    "sm:import:java.util,1",
    "sm:import:org.slf4j.Logger,1",
    "sm:import:java.util.concurrent.ConcurrentHashMap,1",
    "sm:import:com.keybox.common.util.AppConfig,1",
    "sm:input:`userSessionsOutput0`=com.keybox.manage.model.UserSessionsOutput",
    "sm:import:com.keybox.manage.model.AuditWrapper,1",
    "sm:depth:7"
  ]
],[
  253971,
  "VelocityEngine `ve0` = new VelocityEngine();\n`ve0`.setProperty(`RuntimeConstants.RESOURCE_LOADER`, \"file\");\n`ve0`.setProperty(\"cp.resource.loader.class\", \"org.apache.velocity.runtime.resource.loader.FileResourceLoader\");\n`ve0`.setProperty(\"cp.resource.loader.modificationCheckInterval \", \"10\");\nreturn `ve0`;\n",
  0,
  [
    "sm:import:java.util.List,1",
    "sm:import:com.googlecode.jmxtrans.model.Result,1",
    "sm:depth:6",
    "sm:import:com.googlecode.jmxtrans.model.Query,1",
    "sm:output:`ve0`=org.apache.velocity.app.VelocityEngine",
    "sm:hc:2556fac2",
    "sm:src:/home/alex/bachelor/eval2/repos/jmxtrans/jmxtrans/jmxtrans-output/jmxtrans-output-velocity/src/main/java/com/googlecode/jmxtrans/model/output/VelocityWriter.java",
    "sm:import:org.apache.velocity.app.VelocityEngine,1",
    "sm:import:com.fasterxml.jackson.annotation.JsonProperty,1",
    "sm:import:com.fasterxml.jackson.annotation.JsonCreator,1",
    "sm:input:`RuntimeConstants.RESOURCE_LOADER`=java.lang.String",
    "sm:import:com.google.common.collect.ImmutableList,1",
    "sm:import:com.googlecode.jmxtrans.model.Server,1",
    "sm:import:org.apache.commons.lang.StringUtils,1",
    "sm:import:com.googlecode.jmxtrans.model.JmxProcess,1",
    "sm:import:org.apache.velocity.runtime.RuntimeConstants,1",
    "sm:order:28",
    "sm:import:com.googlecode.jmxtrans.model.ValidationException,1",
    "sm:import:java.util.Map,1"
  ]
],[
  90802,
  "`db0` = `createOrOpenDatabase`();\n`sample0`.update();\n",
  0,
  [
    "sm:input:`sample0`=org.jrobin.core.Sample",
    "sm:depth:5",
    "sm:import:org.jrobin.core.RrdDb,1",
    "sm:import:com.fasterxml.jackson.annotation.JsonProperty,1",
    "sm:import:com.google.common.collect.ImmutableList,1",
    "sm:src:/home/alex/bachelor/eval2/repos/jmxtrans/jmxtrans/jmxtrans-output/jmxtrans-output-jrobin/src/main/java/com/googlecode/jmxtrans/model/output/RRDWriter.java",
    "sm:import:java.util.Map,1",
    "sm:import:org.jrobin.core.RrdDefTemplate,1",
    "sm:import:com.googlecode.jmxtrans.model.Query,1",
    "sm:order:10",
    "sm:import:org.jrobin.core.Sample,1",
    "sm:hc:cf0c5549",
    "sm:input:`createOrOpenDatabase`=org.jrobin.core.RrdDb()",
    "sm:import:java.io.File,1",
    "sm:import:com.googlecode.jmxtrans.model.ValidationException,1",
    "sm:import:com.fasterxml.jackson.annotation.JsonCreator,1",
    "sm:import:com.googlecode.jmxtrans.util.NumberUtils.isNumeric,1",
    "sm:import:com.googlecode.jmxtrans.model.Server,1",
    "sm:import:com.google.common.base.Preconditions.checkState,1",
    "sm:import:java.util.List,1",
    "sm:import:com.googlecode.jmxtrans.model.Result,1",
    "sm:import:com.google.common.base.MoreObjects,1",
    "sm:input:`db0`=org.jrobin.core.RrdDb",
    "sm:import:org.apache.commons.io.FileUtils,1",
    "sm:import:org.jrobin.core.RrdDef,1",
    "sm:import:java.util.Map.Entry,1",
    "sm:import:java.util.Arrays,1"
  ]
],[
  150788,
  "ServerInfo `infos0` = new ServerInfo();\n`infos0`.setAnnouncement(`config`.getApplicationSettings().getAnnouncement());\n`infos0`.setGitCommit(`config`.getGitCommit());\n",
  0,
  [
    "sm:import:com.commafeed.frontend.model.ServerInfo,1",
    "sm:import:javax.ws.rs.core.Response.Status,1",
    "sm:import:org.apache.commons.lang3.StringUtils,1",
    "sm:import:com.commafeed.backend.model.User,1",
    "sm:import:javax.inject.Inject,1",
    "sm:import:javax.ws.rs.Produces,1",
    "sm:import:javax.ws.rs.core.Response,1",
    "sm:import:io.swagger.annotations.ApiOperation,1",
    "sm:import:javax.ws.rs.Path,1",
    "sm:output:`infos0`=com.commafeed.frontend.model.ServerInfo",
    "sm:import:com.commafeed.backend.HttpGetter,1",
    "sm:import:javax.ws.rs.Consumes,1",
    "sm:import:javax.ws.rs.QueryParam,1",
    "sm:src:/home/alex/bachelor/eval2/repos/Athou/commafeed/src/main/java/com/commafeed/frontend/resource/ServerREST.java",
    "sm:import:io.swagger.annotations.Api,1",
    "sm:depth:6",
    "sm:import:javax.ws.rs.core.MediaType,1",
    "sm:import:com.commafeed.backend.HttpGetter.HttpResult,1",
    "sm:order:24",
    "sm:hc:b509fe9",
    "sm:import:com.commafeed.frontend.auth.SecurityCheck,1",
    "sm:import:com.commafeed.backend.feed.FeedUtils,1",
    "sm:import:com.codahale.metrics.annotation.Timed,1",
    "sm:input:`config`=com.commafeed.CommaFeedConfiguration",
    "sm:import:com.commafeed.CommaFeedConfiguration,1",
    "sm:import:javax.ws.rs.GET,1",
    "sm:import:lombok.RequiredArgsConstructor,1",
    "sm:import:javax.inject.Singleton,1",
    "sm:import:io.dropwizard.hibernate.UnitOfWork,1"
  ]
],[
  242440,
  "InputStream `xsd0` = `getClass`().getResourceAsStream(\"/car-records.xsd\");\nexpect().body(matchesXsd(`xsd0`)).when().get(\"/shopping\");\n",
  0,
  [
    "sm:import:java.util.Locale,1",
    "sm:import:org.junit.AfterClass,1",
    "sm:import:org.junit.Rule,1",
    "sm:import:org.junit.Test,1",
    "sm:output:`xsd0`=java.io.InputStream",
    "sm:import:org.xml.sax.SAXParseException,1",
    "sm:import:java.io.InputStream,1",
    "sm:hc:1127fe47",
    "sm:import:com.jayway.restassured.itest.java.support.WithJetty,1",
    "sm:input:`getClass`=java.lang.Class()",
    "sm:import:org.junit.rules.ExpectedException,1",
    "sm:import:org.apache.commons.io.IOUtils,1",
    "sm:import:com.jayway.restassured.RestAssured.expect,1",
    "sm:import:org.junit.BeforeClass,1",
    "sm:import:com.jayway.restassured.matcher.RestAssuredMatchers,1",
    "sm:order:24",
    "sm:src:/home/alex/bachelor/eval2/repos/jayway/rest-assured/examples/rest-assured-itest-java/src/test/java/com/jayway/restassured/itest/java/XMLValidationITest.java",
    "sm:depth:7"
  ]
],[
  509216,
  "LineNumberReader `lnr0` = new LineNumberReader(`headerReader0`);\nwhile (true) {\n    String `line0` = `lnr0`.readLine();\n    if (`line0` == null) `Placeholder`\n    `readerLines`.add(`line0`);\n}\n",
  0,
  [
    "sm:src:/home/alex/bachelor/eval2/repos/checkstyle/checkstyle/src/main/java/com/puppycrawl/tools/checkstyle/checks/header/AbstractHeaderCheck.java",
    "sm:import:java.io.IOException,1",
    "sm:import:java.nio.charset.Charset,1",
    "sm:import:java.io.Reader,1",
    "sm:import:com.google.common.collect.ImmutableList,1",
    "sm:import:org.apache.commons.beanutils.ConversionException,1",
    "sm:order:31",
    "sm:import:com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck,1",
    "sm:depth:9",
    "sm:import:com.google.common.collect.Lists,1",
    "sm:import:java.io.LineNumberReader,1",
    "sm:import:com.google.common.io.Closeables,1",
    "sm:import:java.io.BufferedInputStream,1",
    "sm:import:java.io.UnsupportedEncodingException,1",
    "sm:import:com.puppycrawl.tools.checkstyle.utils.CommonUtils,1",
    "sm:import:com.puppycrawl.tools.checkstyle.api.CheckstyleException,1",
    "sm:import:java.util.List,1",
    "sm:import:java.io.InputStreamReader,1",
    "sm:import:java.util.regex.Pattern,1",
    "sm:input:`readerLines`=java.util.List<java.lang.String>",
    "sm:hc:9912c7c4",
    "sm:output:`lnr0`=java.io.LineNumberReader",
    "sm:input:`headerReader0`=java.io.Reader",
    "sm:import:java.io.StringReader,1",
    "sm:import:java.net.URI,1"
  ]
],[
  403490,
  "if (`args.length` > 0) `Placeholder`\n`System.out`.println(StringUtils.join(`result0`.collect(), \",\"));\n",
  0,
  [
    "sm:import:java.util.List,1",
    "sm:depth:6",
    "sm:hc:c844d167",
    "sm:src:/home/alex/bachelor/eval2/repos/databricks/learning-spark/mini-complete-example/src/main/java/com/oreilly/learningsparkexamples/mini/java/BasicMap.java",
    "sm:input:`result0`=org.apache.spark.api.java.JavaRDD<java.lang.Integer>",
    "sm:input:`System.out`=java.io.PrintStream",
    "sm:order:17",
    "sm:import:org.apache.spark.api.java.JavaRDD,1",
    "sm:import:org.apache.commons.lang.StringUtils,1",
    "sm:import:org.apache.spark.api.java.JavaSparkContext,1",
    "sm:import:org.apache.spark.api.java.function.Function,1",
    "sm:input:`args.length`=int",
    "sm:import:java.util.Arrays,1"
  ]
],[
  659044,
  "if (`n0` > `MAX_INT_SMALLER_TWIN_PRIME`) `Placeholder`\nif (`n0` <= 3) `Placeholder`\nint `next0` = Primes.nextPrime(`n0`);\n",
  0,
  [
    "sm:order:20",
    "sm:depth:6",
    "sm:output:`next0`=int",
    "sm:hc:cb8b6bc6",
    "sm:input:`MAX_INT_SMALLER_TWIN_PRIME`=int",
    "sm:import:java.util.Collections,1",
    "sm:input:`n0`=int",
    "sm:src:/home/alex/bachelor/eval2/repos/apache/mahout/math/src/main/java/org/apache/mahout/common/RandomUtils.java",
    "sm:import:java.util.WeakHashMap,1",
    "sm:import:java.util.Random,1",
    "sm:import:com.google.common.primitives.Longs,1",
    "sm:import:org.apache.commons.math3.primes.Primes,1",
    "sm:import:java.util.Map,1"
  ]
],[
  485646,
  "if (`err0` != null) `Placeholder`",
  0,
  [
    "sm:import:java.io.IOException,1",
    "sm:import:java.nio.charset.Charset,1",
    "sm:hc:296db917",
    "sm:import:javax.annotation.Nullable,1",
    "sm:depth:3",
    "sm:import:com.googlecode.jmxtrans.model.Query,1",
    "sm:import:java.net.URL,1",
    "sm:import:java.net.HttpURLConnection,1",
    "sm:src:/home/alex/bachelor/eval2/repos/jmxtrans/jmxtrans/jmxtrans-output/jmxtrans-output-core/src/main/java/com/googlecode/jmxtrans/model/output/support/HttpOutputWriter.java",
    "sm:import:com.google.common.base.MoreObjects.firstNonNull,1",
    "sm:import:org.slf4j.LoggerFactory,1",
    "sm:import:java.net.Proxy,1",
    "sm:input:`err0`=java.io.InputStream",
    "sm:import:com.googlecode.jmxtrans.model.Server,1",
    "sm:import:org.apache.commons.io.IOUtils,1",
    "sm:import:org.slf4j.Logger,1",
    "sm:import:com.google.common.base.Charsets.UTF_8,1",
    "sm:import:com.googlecode.jmxtrans.model.Result,1",
    "sm:import:com.google.common.io.ByteStreams.nullOutputStream,1",
    "sm:import:javax.annotation.Nonnull,1",
    "sm:import:com.googlecode.jmxtrans.model.OutputWriterAdapter,1",
    "sm:import:com.google.common.io.ByteStreams.copy,1",
    "sm:import:java.io.InputStream,1",
    "sm:import:com.google.common.io.Closer,1",
    "sm:order:5",
    "sm:import:java.io.OutputStreamWriter,1"
  ]
],[
  279789,
  "`RestAssured.baseURI` = \"https://jira.atlassian.com\";\n`RestAssured.port` = 443;\nString `query0` = \"project%20=%20BAM%20AND%20issuetype%20=%20Bug\";\n",
  0,
  [
    "sm:import:org.hamcrest.Matchers,1",
    "sm:depth:5",
    "sm:import:java.io.StringWriter,1",
    "sm:import:com.jayway.restassured.RestAssured.given,1",
    "sm:import:com.jayway.restassured.RestAssured,1",
    "sm:import:java.net.URLEncoder,1",
    "sm:import:com.jayway.restassured.response.Response,1",
    "sm:import:com.jayway.restassured.filter.log.RequestLoggingFilter,1",
    "sm:input:`RestAssured.baseURI`=java.lang.String",
    "sm:src:/home/alex/bachelor/eval2/repos/jayway/rest-assured/examples/rest-assured-itest-java/src/test/java/com/jayway/restassured/itest/java/URLEncodingITest.java",
    "sm:import:com.jayway.restassured.specification.FilterableResponseSpecification,1",
    "sm:hc:6a486e9b",
    "sm:import:com.jayway.restassured.itest.java.support.RequestPathFromLogExtractor.loggedRequestPathIn,1",
    "sm:import:com.jayway.restassured.http.ContentType.JSON,1",
    "sm:import:com.jayway.restassured.itest.java.support.WithJetty,1",
    "sm:output:`query0`=java.lang.String",
    "sm:import:com.jayway.restassured.specification.RequestSpecification,1",
    "sm:input:`RestAssured.port`=int",
    "sm:import:com.jayway.restassured.specification.FilterableRequestSpecification,1",
    "sm:import:com.jayway.restassured.builder.RequestSpecBuilder,1",
    "sm:import:com.jayway.restassured.filter.Filter,1",
    "sm:import:java.io.PrintStream,1",
    "sm:import:org.apache.commons.io.output.WriterOutputStream,1",
    "sm:import:org.junit.Test,1",
    "sm:import:org.junit.Assert.assertThat,1",
    "sm:order:15",
    "sm:import:com.jayway.restassured.builder.ResponseBuilder,1",
    "sm:import:com.jayway.restassured.filter.FilterContext,1",
    "sm:import:org.junit.Ignore,1",
    "sm:import:com.jayway.restassured.RestAssured.expect,1"
  ]
],[
  168688,
  "InputStream `is0` = `getClass`().getResourceAsStream(\"/car-records.xsd\");\ngiven().config(config().multiPartConfig(multiPartConfig().with().defaultFileName(\"file-2.txt\"))).multiPart(new MultiPartSpecBuilder(`is0`).build()).when().post(\"/multipart/filename\").then().statusCode(200).body(equalTo(\"file-2.txt\"));\n",
  0,
  [
    "sm:import:com.jayway.restassured.config.RestAssuredConfig.config,1",
    "sm:output:`is0`=java.io.InputStream",
    "sm:import:org.hamcrest.Matchers,1",
    "sm:import:com.jayway.restassured.RestAssured.given,1",
    "sm:import:com.jayway.restassured.builder.MultiPartSpecBuilder,1",
    "sm:src:/home/alex/bachelor/eval2/repos/jayway/rest-assured/examples/rest-assured-itest-java/src/test/java/com/jayway/restassured/itest/java/presentation/MultiPartITest.java",
    "sm:import:java.io.InputStream,1",
    "sm:import:com.jayway.restassured.itest.java.support.WithJetty,1",
    "sm:hc:4a45bbce",
    "sm:input:`getClass`=java.lang.Class()",
    "sm:import:org.apache.commons.io.IOUtils,1",
    "sm:import:org.junit.Ignore,1",
    "sm:import:com.jayway.restassured.config.MultiPartConfig.multiPartConfig,1",
    "sm:import:java.io.File,1",
    "sm:order:49",
    "sm:import:org.junit.Test,1",
    "sm:depth:14"
  ]
],[
  284856,
  "if (!`testPermission`(`sender0`)) `Placeholder`\nBukkit.shutdown();\nString `reason0` = `createString`(`args0`, 0);\nif (StringUtils.isNotEmpty(`reason0`)) `Placeholder`\nreturn true;\n",
  0,
  [
    "sm:import:java.util.List,1",
    "sm:import:org.apache.commons.lang.Validate,1",
    "sm:depth:6",
    "sm:import:org.bukkit.command.Command,1",
    "sm:hc:8ede3e77",
    "sm:import:org.bukkit.Bukkit,1",
    "sm:src:/home/alex/bachelor/eval2/repos/Bukkit/Bukkit/src/main/java/org/bukkit/command/defaults/StopCommand.java",
    "sm:input:`createString`=java.lang.String(java.lang.String[],int)",
    "sm:output:`reason0`=java.lang.String",
    "sm:import:org.bukkit.entity.Player,1",
    "sm:import:org.apache.commons.lang.StringUtils,1",
    "sm:input:`sender0`=org.bukkit.command.CommandSender",
    "sm:import:com.google.common.collect.ImmutableList,1",
    "sm:input:`args0`=java.lang.String[]",
    "sm:order:28",
    "sm:input:`testPermission`=boolean(org.bukkit.command.CommandSender)",
    "sm:import:org.bukkit.command.CommandSender,1"
  ]
],[
  61083,
  "super(\"save-all\");\n`this.usageMessage` = \"/save-all\";\n`setPermission`(\"bukkit.command.save.perform\");\n",
  0,
  [
    "sm:import:java.util.List,1",
    "sm:import:org.apache.commons.lang.Validate,1",
    "sm:import:org.bukkit.command.Command,1",
    "sm:input:`this.usageMessage`=java.lang.String",
    "sm:order:13",
    "sm:hc:9e2ff987",
    "sm:input:`setPermission`=void(java.lang.String)",
    "sm:depth:4",
    "sm:import:org.bukkit.Bukkit,1",
    "sm:import:org.bukkit.World,1",
    "sm:src:/home/alex/bachelor/eval2/repos/Bukkit/Bukkit/src/main/java/org/bukkit/command/defaults/SaveCommand.java",
    "sm:import:com.google.common.collect.ImmutableList,1",
    "sm:import:org.bukkit.command.CommandSender,1"
  ]
],[
  9010,
  "if (`args.length` > 0) `Placeholder` else `Placeholder`\nJavaSparkContext `sc0` = new JavaSparkContext(`master0`, \"basicmaptodouble\", System.getenv(\"SPARK_HOME\"), System.getenv(\"JARS\"));\n",
  0,
  [
    "sm:import:java.util.List,1",
    "sm:src:/home/alex/bachelor/eval2/repos/databricks/learning-spark/src/main/java/com/oreilly/learningsparkexamples/java/BasicMapToDouble.java",
    "sm:import:org.apache.spark.api.java.JavaDoubleRDD,1",
    "sm:import:org.apache.spark.api.java.JavaRDD,1",
    "sm:import:org.apache.commons.lang.StringUtils,1",
    "sm:hc:b2d05a0b",
    "sm:output:`sc0`=org.apache.spark.api.java.JavaSparkContext",
    "sm:order:24",
    "sm:import:org.apache.spark.api.java.function.DoubleFunction,1",
    "sm:import:org.apache.spark.api.java.JavaSparkContext,1",
    "sm:input:`master0`=java.lang.String",
    "sm:input:`args.length`=int",
    "sm:import:java.util.Arrays,1",
    "sm:depth:7"
  ]
],[
  337975,
  "for(String `string0` : `originals0`) `Placeholder`",
  4,
  [
    "sm:import:java.util.Arrays,2",
    "sm:import:org.apache.commons.lang.Validate,1",
    "sm:import:org.reflections.ReflectionUtils.forName,2",
    "sm:import:com.google.common.base.Joiner,2",
    "sm:input:`originals0`=java.lang.Iterable<java.lang.String>",
    "sm:import:java.util.Collection,1",
    "sm:import:com.google.common.base.Preconditions.checkArgument,1",
    "sm:import:org.slf4j.Logger,2",
    "sm:import:java.nio.file.InvalidPathException,1",
    "sm:import:org.reflections.ReflectionsException,2",
    "sm:hc:91004a5d",
    "sm:import:java.util.ArrayList,2",
    "sm:import:java.lang.reflect.Member,2",
    "sm:import:com.google.common.collect.Sets,2",
    "sm:import:java.io.File,2",
    "sm:import:java.util.List,2",
    "sm:depth:4",
    "sm:src:/home/alex/bachelor/eval2/repos/Bukkit/Bukkit/src/main/java/org/bukkit/util/StringUtil.java",
    "sm:import:java.lang.reflect.Method,2",
    "sm:import:java.lang.reflect.Constructor,2",
    "sm:import:org.slf4j.LoggerFactory,2",
    "sm:import:java.io.InputStream,2",
    "sm:import:javax.annotation.Nullable,3",
    "sm:import:java.util.Set,2",
    "sm:order:7",
    "sm:import:org.reflections.Reflections,2",
    "sm:import:java.io.IOException,2",
    "sm:import:java.lang.reflect.Field,2"
  ]
],[
  10412,
  "Validate.notNull(`itemStack0`, \"ItemStack cannot be null\");\n`this.itemStack` = `itemStack0`;\n`this.destinationInventory` = `destinationInventory0`;\n`this.didSourceInitiate` = `didSourceInitiate0`;\n",
  0,
  [
    "sm:import:org.apache.commons.lang.Validate,1",
    "sm:import:org.bukkit.event.Cancellable,1",
    "sm:import:org.bukkit.event.HandlerList,1",
    "sm:hc:37e532c4",
    "sm:src:/home/alex/bachelor/eval2/repos/Bukkit/Bukkit/src/main/java/org/bukkit/event/inventory/InventoryMoveItemEvent.java",
    "sm:depth:4",
    "sm:input:`didSourceInitiate0`=boolean",
    "sm:input:`destinationInventory0`=org.bukkit.inventory.Inventory",
    "sm:order:19",
    "sm:import:org.bukkit.event.Event,1",
    "sm:input:`this.itemStack`=org.bukkit.inventory.ItemStack",
    "sm:import:org.bukkit.inventory.ItemStack,1",
    "sm:import:org.bukkit.inventory.Inventory,1",
    "sm:input:`this.destinationInventory`=org.bukkit.inventory.Inventory",
    "sm:input:`itemStack0`=org.bukkit.inventory.ItemStack",
    "sm:input:`this.didSourceInitiate`=boolean"
  ]
],[
  596479,
  "BufferedReader `input0` = `reader0` instanceof BufferedReader ? (BufferedReader) `reader0` : new BufferedReader(`reader0`);\nStringBuilder `builder0` = new StringBuilder();\ntry {\n    String `line0`;\n    while ((`line0` = `input0`.readLine()) != null) `Placeholder`\n} finally {\n    `input0`.close();\n}\n",
  0,
  [
    "sm:import:java.io.IOException,1",
    "sm:import:java.nio.charset.Charset,1",
    "sm:import:org.apache.commons.lang.Validate,1",
    "sm:import:java.io.Reader,1",
    "sm:output:`input0`=java.io.BufferedReader",
    "sm:hc:85b4c333",
    "sm:import:java.io.FileInputStream,1",
    "sm:order:47",
    "sm:import:org.bukkit.configuration.MemoryConfiguration,1",
    "sm:import:java.io.File,1",
    "sm:import:com.google.common.base.Charsets,1",
    "sm:import:java.io.BufferedReader,1",
    "sm:import:org.bukkit.configuration.InvalidConfigurationException,1",
    "sm:input:`reader0`=java.io.Reader",
    "sm:depth:10",
    "sm:import:java.io.FileOutputStream,1",
    "sm:import:java.io.FileNotFoundException,1",
    "sm:src:/home/alex/bachelor/eval2/repos/Bukkit/Bukkit/src/main/java/org/bukkit/configuration/file/FileConfiguration.java",
    "sm:import:org.yaml.snakeyaml.external.biz.base64Coder.Base64Coder,1",
    "sm:output:`builder0`=java.lang.StringBuilder",
    "sm:import:java.io.InputStreamReader,1",
    "sm:import:java.io.Writer,1",
    "sm:import:org.bukkit.configuration.Configuration,1",
    "sm:import:java.io.InputStream,1",
    "sm:import:com.google.common.io.Files,1",
    "sm:import:java.io.OutputStreamWriter,1"
  ]
],[
  644335,
  "JedisPoolConfig `config0` = new JedisPoolConfig();\n`config0`.setMaxTotal(`maxTotal`);\n",
  0,
  [
    "sm:depth:6",
    "sm:hc:8c9ab15a",
    "sm:src:/home/alex/bachelor/eval2/repos/Athou/commafeed/src/main/java/com/commafeed/backend/cache/RedisPoolFactory.java",
    "sm:input:`maxTotal`=int",
    "sm:order:13",
    "sm:import:lombok.Getter,1",
    "sm:import:org.apache.commons.lang3.StringUtils,1",
    "sm:import:redis.clients.jedis.JedisPool,1",
    "sm:output:`config0`=redis.clients.jedis.JedisPoolConfig",
    "sm:import:redis.clients.jedis.Protocol,1",
    "sm:import:redis.clients.jedis.JedisPoolConfig,1"
  ]
],[
  106187,
  "StringWriter `writer0` = new StringWriter();\nPrintStream `captor0` = new PrintStream(new WriterOutputStream(`writer0`), true);\ngiven().auth().form(\"John\", \"Doe\", springSecurity().withLoggingEnabled(new LogConfig(`captor0`, true))).when().get(\"/formAuth\").then().statusCode(200).body(equalTo(\"OK\"));\n",
  0,
  [
    "sm:src:/home/alex/bachelor/eval2/repos/jayway/rest-assured/examples/rest-assured-itest-java/src/test/java/com/jayway/restassured/itest/java/AuthenticationITest.java",
    "sm:import:com.jayway.restassured.authentication.FormAuthConfig.springSecurity,1",
    "sm:import:org.hamcrest.Matchers.equalTo,1",
    "sm:import:java.io.StringWriter,1",
    "sm:import:com.jayway.restassured.authentication.FormAuthConfig,1",
    "sm:import:com.jayway.restassured.RestAssured,1",
    "sm:import:com.jayway.restassured.authentication.FormAuthConfig.formAuthConfig,1",
    "sm:output:`captor0`=java.io.PrintStream",
    "sm:output:`writer0`=java.io.StringWriter",
    "sm:order:51",
    "sm:import:com.jayway.restassured.itest.java.support.WithJetty,1",
    "sm:import:com.jayway.restassured.config.RestAssuredConfig.newConfig,1",
    "sm:import:com.jayway.restassured.specification.RequestSpecification,1",
    "sm:import:com.jayway.restassured.builder.RequestSpecBuilder,1",
    "sm:import:java.io.PrintStream,1",
    "sm:import:org.apache.commons.io.output.WriterOutputStream,1",
    "sm:import:com.jayway.restassured.config.SessionConfig.sessionConfig,1",
    "sm:import:org.junit.Test,1",
    "sm:import:com.jayway.restassured.config.LogConfig,1",
    "sm:import:org.junit.Assert.assertThat,1",
    "sm:import:com.jayway.restassured.filter.log.LogDetail,1",
    "sm:hc:1e4a57e0",
    "sm:import:com.jayway.restassured.filter.session.SessionFilter,1",
    "sm:depth:11"
  ]
],[
  605216,
  "`LOGGER`.debug(\"start to download. From: \" + `remoteUrl` + \" , TO: \" + `localTmpFile`.getAbsolutePath());\nFileUtils.copyURLToFile(`remoteUrl`, `localTmpFile`);\n`LOGGER`.debug(\"download success!  \" + `localTmpFile`.getAbsolutePath());\n",
  0,
  [
    "sm:hc:608446e3",
    "sm:import:org.slf4j.LoggerFactory,1",
    "sm:depth:6",
    "sm:import:java.net.URL,1",
    "sm:input:`LOGGER`=org.slf4j.Logger",
    "sm:input:`localTmpFile`=java.io.File",
    "sm:import:com.baidu.disconf.core.common.utils.OsUtil,1",
    "sm:import:org.apache.commons.io.FileUtils,1",
    "sm:input:`remoteUrl`=java.net.URL",
    "sm:import:com.baidu.disconf.core.common.restful.core.UnreliableInterface,1",
    "sm:import:java.io.File,1",
    "sm:import:org.slf4j.Logger,1",
    "sm:src:/home/alex/bachelor/eval2/repos/knightliao/disconf/disconf-core/src/main/java/com/baidu/disconf/core/common/restful/type/FetchConfFile.java",
    "sm:order:27"
  ]
],[
  429209,
  "StringWriter `writer0` = new StringWriter();\nPrintStream `captor0` = new PrintStream(new WriterOutputStream(`writer0`), true);\nassertThat(`writer0`.toString(), equalTo(\"Request method:\\tGET\\nRequest URI:\\thttp://localhost:8080/greetJSON?firstName=John&lastName=Doe\\nProxy:\\t\\t\\thttp://127.0.0.1:8888\\nRequest params:\\tfirstName=John\\n\\t\\t\\t\\tlastName=Doe\\nQuery params:\\t<none>\\nForm params:\\t<none>\\nPath params:\\t<none>\\nMultiparts:\\t\\t<none>\\nHeaders:\\t\\tAccept=*/*\\nCookies:\\t\\t<none>\\nBody:\\t\\t\\t<none>\\n\"));\n",
  0,
  [
    "sm:import:org.hamcrest.Matchers,1",
    "sm:import:java.io.StringWriter,1",
    "sm:import:com.jayway.restassured.RestAssured.given,1",
    "sm:import:com.jayway.restassured.RestAssured,1",
    "sm:import:com.jayway.restassured.filter.log.RequestLoggingFilter,1",
    "sm:import:org.junit.BeforeClass,1",
    "sm:output:`captor0`=java.io.PrintStream",
    "sm:output:`writer0`=java.io.StringWriter",
    "sm:import:java.net.URISyntaxException,1",
    "sm:hc:4806ece1",
    "sm:import:org.littleshoot.proxy.HttpProxyServer,1",
    "sm:import:com.jayway.restassured.itest.java.support.WithJetty,1",
    "sm:import:java.io.File,1",
    "sm:import:com.jayway.restassured.specification.RequestSpecification,1",
    "sm:import:com.jayway.restassured.builder.RequestSpecBuilder,1",
    "sm:import:java.io.PrintStream,1",
    "sm:import:org.apache.commons.io.output.WriterOutputStream,1",
    "sm:import:org.junit.Test,1",
    "sm:import:org.junit.Assert.assertThat,1",
    "sm:src:/home/alex/bachelor/eval2/repos/jayway/rest-assured/examples/rest-assured-itest-java/src/test/java/com/jayway/restassured/itest/java/ProxyITest.java",
    "sm:import:org.littleshoot.proxy.impl.DefaultHttpProxyServer,1",
    "sm:import:org.junit.AfterClass,1",
    "sm:import:org.apache.commons.io.FileUtils,1",
    "sm:import:java.net.URI,1",
    "sm:import:com.jayway.restassured.specification.ProxySpecification.host,1",
    "sm:import:java.net.ConnectException,1",
    "sm:import:org.junit.Ignore,1",
    "sm:order:28",
    "sm:depth:7"
  ]
],[
  264966,
  "Map<String,String> `typeNameValueMap0` = TypeNameValue.extractMap(`typeNameStr0`);\nStringBuilder `sb0` = new StringBuilder();\nreturn chomp(`sb0`.toString(), `separator`);\n",
  0,
  [
    "sm:import:java.util.List,1",
    "sm:src:/home/alex/bachelor/eval2/repos/jmxtrans/jmxtrans/jmxtrans-core/src/main/java/com/googlecode/jmxtrans/model/naming/typename/TypeNameValuesStringBuilder.java",
    "sm:import:lombok.EqualsAndHashCode,1",
    "sm:depth:6",
    "sm:output:`typeNameValueMap0`=java.util.Map<java.lang.String,java.lang.String>",
    "sm:input:`separator`=java.lang.String",
    "sm:import:lombok.ToString,1",
    "sm:output:`sb0`=java.lang.StringBuilder",
    "sm:import:org.apache.commons.lang.StringUtils.chomp,1",
    "sm:order:24",
    "sm:hc:d200fdcb",
    "sm:import:javax.annotation.concurrent.Immutable,1",
    "sm:input:`typeNameStr0`=java.lang.String",
    "sm:import:java.util.Map,1"
  ]
],[
  229154,
  "`jobIdToNodeId` = new ConcurrentHashMap<String,String>();\n`jobs` = new CopyOnWriteArrayList<Job>();\n`completedJobIds` = new CopyOnWriteArraySet<String>();\n`workflowVersion` = null;\n",
  0,
  [
    "sm:order:20",
    "sm:import:java.io.IOException,1",
    "sm:import:org.apache.commons.logging.LogFactory,1",
    "sm:import:java.util.Set,1",
    "sm:depth:5",
    "sm:import:com.twitter.ambrose.service.StatsWriteService,1",
    "sm:input:`jobs`=java.util.List<com.twitter.ambrose.model.Job>",
    "sm:import:java.util.Map,1",
    "sm:input:`completedJobIds`=java.util.Set<java.lang.String>",
    "sm:import:java.util.concurrent.ConcurrentSkipListMap,1",
    "sm:import:org.apache.commons.logging.Log,1",
    "sm:import:java.util.concurrent.CopyOnWriteArrayList,1",
    "sm:import:java.util.concurrent.CopyOnWriteArraySet,1",
    "sm:input:`jobIdToNodeId`=java.util.Map<java.lang.String,java.lang.String>",
    "sm:import:com.twitter.ambrose.model.Job,1",
    "sm:hc:6263cad2",
    "sm:import:java.util.concurrent.ConcurrentHashMap,1",
    "sm:import:java.util.List,1",
    "sm:import:java.util.SortedMap,1",
    "sm:import:com.twitter.ambrose.model.DAGNode,1",
    "sm:src:/home/alex/bachelor/eval2/repos/twitter/ambrose/hive/src/main/java/com/twitter/ambrose/hive/reporter/AmbroseHiveProgressReporter.java",
    "sm:import:com.twitter.ambrose.model.Event,1",
    "sm:input:`workflowVersion`=java.lang.String"
  ]
],[
  10590,
  "`artifactStorePath`().setDefault(new UserHome(\".embedmongo\"));\n`userAgent`().setDefault(new UserAgent(\"Mozilla/5.0 (compatible; elasticsearch-river-mongodb tests; https://github.com/richardwilly98/elasticsearch-river-mongodb)\"));\nreturn this;\n",
  0,
  [
    "sm:depth:5",
    "sm:import:de.flapdoodle.embed.mongo.Command,1",
    "sm:input:`artifactStorePath`=de.flapdoodle.embed.process.builder.IProperty()",
    "sm:src:/home/alex/bachelor/eval2/repos/richardwilly98/elasticsearch-river-mongodb/src/test/java/org/elasticsearch/river/mongodb/embed/TokuDownloadConfigBuilder.java",
    "sm:import:org.apache.commons.lang3.Validate,1",
    "sm:hc:88fcbead",
    "sm:order:19",
    "sm:import:de.flapdoodle.embed.process.extract.UUIDTempNaming,1",
    "sm:import:de.flapdoodle.embed.process.io.progress.StandardConsoleProgressListener,1",
    "sm:import:de.flapdoodle.embed.process.io.directories.UserHome,1",
    "sm:input:`userAgent`=de.flapdoodle.embed.process.builder.IProperty()"
  ]
],[
  454586,
  "Collection<? extends Player> `players0` = Bukkit.getOnlinePlayers();\nfor(Player `player0` : `players0`) {\n    if (`sender0` instanceof Player && !((Player) `sender0`).canSee(`player0`)) continue;\n    if (`online0`.length() > 0) `Placeholder`\n}\n",
  0,
  [
    "sm:import:java.util.List,1",
    "sm:input:`online0`=java.lang.StringBuilder",
    "sm:import:org.apache.commons.lang.Validate,1",
    "sm:hc:5d4ad1a2",
    "sm:import:org.bukkit.Bukkit,1",
    "sm:output:`players0`=java.util.Collection<? extends org.bukkit.entity.Player>",
    "sm:import:com.google.common.collect.ImmutableList,1",
    "sm:import:org.bukkit.entity.Player,1",
    "sm:input:`sender0`=org.bukkit.command.CommandSender",
    "sm:import:java.util.Collection,1",
    "sm:depth:11",
    "sm:order:38",
    "sm:src:/home/alex/bachelor/eval2/repos/Bukkit/Bukkit/src/main/java/org/bukkit/command/defaults/ListCommand.java",
    "sm:import:org.bukkit.command.CommandSender,1"
  ]
],[
  465969,
  "`url` = \"http://localhost:8081/restlet/test\";\n`component`.getServers().add(`Protocol.HTTP`, 8081);\n",
  0,
  [
    "sm:import:java.io.IOException,1",
    "sm:depth:5",
    "sm:import:org.hamcrest.Matchers.equalTo,1",
    "sm:import:com.jayway.restassured.RestAssured.given,1",
    "sm:src:/home/alex/bachelor/eval2/repos/jayway/rest-assured/examples/rest-assured-itest-java/src/test/java/com/jayway/restassured/itest/java/stress/StressITest.java",
    "sm:import:com.jayway.restassured.RestAssured,1",
    "sm:import:org.junit.Assert.assertEquals,1",
    "sm:input:`Protocol.HTTP`=org.restlet.data.Protocol",
    "sm:import:com.jayway.restassured.config.ConnectionConfig,1",
    "sm:import:org.junit.Before,1",
    "sm:import:com.jayway.restassured.config.RestAssuredConfig.newConfig,1",
    "sm:import:org.junit.After,1",
    "sm:import:org.restlet.data.Protocol,1",
    "sm:import:com.jayway.restassured.RestAssured.get,1",
    "sm:import:java.io.UnsupportedEncodingException,1",
    "sm:order:13",
    "sm:import:org.apache.commons.io.IOUtils,1",
    "sm:import:org.junit.Test,1",
    "sm:import:com.jayway.restassured.config.RestAssuredConfig.config,1",
    "sm:input:`url`=java.lang.String",
    "sm:import:com.jayway.restassured.config.HttpClientConfig.httpClientConfig,1",
    "sm:import:org.restlet.Component,1",
    "sm:input:`component`=org.restlet.Component",
    "sm:hc:f50b8c95"
  ]
]
]